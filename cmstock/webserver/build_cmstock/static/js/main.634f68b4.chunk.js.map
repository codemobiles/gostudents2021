{"version":3,"sources":["constants/index.js","utils/HttpClient.js","actions/login.action.js","components/layouts/Header.js","components/layouts/Menu.js","components/pages/LoginPage/LoginPage.js","actions/register.action.js","components/pages/RegisterPage/RegisterPage.js","components/pages/ShopPage/styles.js","models/transaction.js","actions/shop.action.js","components/fragments/Payment/Payment.js","actions/stock.action.js","components/pages/ShopPage/ShopPage.js","components/fragments/StockCard/StockCard.js","components/pages/StockPage/StockPage.js","components/pages/StockCreatePage/StockCreatePage.js","components/pages/StockEditPage/StockEditPage.js","components/pages/ReportPage/ReportPage.js","components/pages/TransactionPage/TransactionPage.js","actions/transaction.action.js","App.js","serviceWorker.js","reducers/login.reducer.js","reducers/register.reducer.js","reducers/stock.reducer.js","reducers/shop.reducer.js","reducers/transaction.reducer.js","reducers/index.js","index.js"],"names":["apiUrl","imageUrl","server","isAbsoluteURLRegex","axios","interceptors","request","use","a","config","test","url","join","userToken","localStorage","getItem","headers","Authorization","timeout","response","error","console","log","JSON","stringify","undefined","status","refreshToken","refreshUrl","post","result","token","data","jwt","setItem","removeItem","isCancel","Promise","reject","alert","code","message","httpClient","setLoginStateToSuccess","payload","type","setLoginStateToFailed","isLoggedIn","decodedToken","decode","complete","dateNow","Date","exp","getTime","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","sectionDesktop","sectionMobile","grow","withRouter","props","classes","React","useState","anchorEl","setAnchorEl","dispatch","useDispatch","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","history","push","className","AppBar","position","clsx","IconButton","color","aria-label","handleDrawerOpen","edge","Typography","variant","noWrap","process","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","bannerOpen","backgroundImage","backgroundColor","isActive","Drawer","paper","handleDrawerClose","src","height","style","alt","Divider","List","ListItem","component","NavLink","to","button","key","activeClassName","ListItemIcon","ListItemText","primary","maxWidth","marginTop","form","submit","margin","loginReducer","useSelector","useEffect","loginActions","Card","CardMedia","image","title","CardContent","gutterBottom","initialValues","username","password","onSubmit","values","value","setSubmitting","handleChange","handleSubmit","isSubmitting","setFieldValue","noValidate","TextField","required","fullWidth","label","onChange","autoComplete","autoFocus","name","isError","Alert","severity","marginBottom","Button","disabled","CircularProgress","Grid","container","justify","Link","RouterLink","showForm","setRegisterStateToFailed","flexDirection","avatar","palette","secondary","main","goBack","cancel","star","orderList","flex","maxHeight","orderListItem","productContainer","paymentButton","leftLabel","rightLabel","TransactionRequest","subtotal","total","paid","change","order_list","payment_type","payment_detail","staff_id","doUpdateOrder","orderLines","totalPrice","item","price","qty","taxAmt","shopReducer","fontSize","field","updateChange","given","mTotalPrice","onClickGiven","newValue","oldValue","newGiven","onClickSubmit","trans","order","getState","then","mOrderLines","isPaymentMade","err","isMustChanged","InputLabelProps","shrink","InputProps","readOnly","startAdornment","InputAdornment","readonly","xs","onClickExact","setStateStockToSuccess","getProducts","doGetProducts","get","stockReducer","stockActions","Paper","elevation","paddingTop","paddingBottom","mIsPaymentMade","Payment","Container","overflowY","map","i","index","indexOf","unshift","shopActions","cursor","CardActionArea","alignitem","product_id","product","renderProductRows","mTaxAmt","displayType","decimalScale","thousandSeparator","prefix","fixedDecimalScale","mGiven","length","divider","alignContent","align","foundIndex","splice","StockCard","minHeight","subtitle","minWidth","createElement","icon","selectedRow","setSelectedRow","openDialog","setOpenDialog","selectedProduct","setSelectedProduct","columns","render","cellStyle","Math","random","borderRadius","stock","suffix","format","created","actions","iconProps","tooltip","rowData","handleDeleteConfirm","delete","handleClose","lg","md","AddShoppingCartIcon","NewReleasesIcon","AssignmentReturnIcon","StarIcon","onRowClick","evt","options","pageSize","rowStyle","tableData","components","Toolbar","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","card","showPreviewImage","file_obj","validate","errors","formData","FormData","append","file","e","preventDefault","target","files","URL","createObjectURL","click-type","multiple","accept","CardActions","raised","match","params","enableReinitialize","put","chartType","setChartType","chartData","setChartData","getRandomInt","randoms","floor","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOption","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","callback","toString","replace","ButtonGroup","size","setorderList","transactionReducer","catch","transactionColumns","created_at","parse","orderColumns","clickTransactionRow","search","paging","createMuiTheme","500","danger","window","location","hostname","initialState","isFetching","combineReducers","state","registerReducer","middlewares","applyMiddleware","thunk","logger","store","createStore","reducers","ReactDOM","setOpen","SecuredRoute","Component","rest","basename","ThemeProvider","CssBaseline","LoginPage","path","RegisterPage","ShopPage","exact","StockPage","StockCreatePage","StockEditPage","ReportPage","TransactionPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qZAuDaA,EAAS,+BACTC,EAAW,wBAEXC,EACD,QADCA,EAEO,gBAFPA,EAGE,WAHFA,EAIC,UAJDA,EAKK,cALLA,EAOD,QAPCA,EAQO,gB,oCCzDdC,EAAqB,gBAE3BC,IAAMC,aAAaC,QAAQC,IAA3B,+BAAAC,EAAA,MAA+B,WAAMC,GAAN,eAAAD,EAAA,6DACxBL,EAAmBO,KAAKD,EAAOE,OAClCF,EAAOE,IAAMC,IAAKZ,EAAQS,EAAOE,OAG7BE,EAAYC,aAAaC,QAAQb,MAErCO,EAAOO,QAAU,CAAGC,cAAc,UAAD,OAAYJ,KAG/CJ,EAAOS,QAAU,IAVY,kBAWtBT,GAXsB,2CAA/B,uDAcAL,IAAMC,aAAac,SAASZ,KAC1B,SAAAY,GACE,OAAOA,IAFX,+BAAAX,EAAA,MAIE,WAAMY,GAAN,qBAAAZ,EAAA,yDACEa,QAAQC,IAAIC,KAAKC,UAAUJ,OAAOK,EAAW,IAChB,OAAzBL,EAAMD,SAASO,OAFrB,wBAGUC,EAAeb,aAAaC,QAAQb,GACpC0B,EAJV,UAI0B5B,EAJ1B,YAIoCE,GAJpC,SAKuBE,IAAMyB,KAAKD,EAAY,CAAED,iBALhD,cAKQG,EALR,OAOUC,EAAQD,EAAOE,KAAKC,IAC1BnB,aAAaoB,QAAQhC,EAAkB6B,GAR3C,kBASW3B,IAAME,QAAQc,EAAMX,SAT/B,QAUsC,OAAzBW,EAAMD,SAASO,SAExBZ,aAAaqB,WAAWjC,GACxBY,aAAaqB,WAAWjC,IAb5B,YAgBME,IAAMgC,SAAShB,GAhBrB,0CAiBWiB,QAAQC,OAAOlB,IAjB1B,WAkBcA,EAAMD,SAlBpB,wBAmBIoB,MAAMhB,KAAKC,UAAUJ,IAnBzB,kBAoBWiB,QAAQC,OAAO,CACpBE,KDL2B,sBCM3BC,QDFN,iDCpBA,iCAyBSJ,QAAQC,OAAOlB,IAzBxB,4CAJF,uDAiCO,IAAMsB,EAAatC,I,kBC3CbuC,EAAyB,SAAAC,GAAO,MAAK,CAChDC,KFd2B,gBEe3BD,YAGWE,EAAwB,SAAAF,GAAO,MAAK,CAC/CC,KFpB0B,eEqB1BD,YAqCWG,EAAa,WACxB,IAAIhB,EAAQjB,aAAaC,QAAQb,GACjC,GAAI6B,EAAO,CACT,IAAIiB,EAAef,IAAIgB,OAAOlB,EAAO,CAAEmB,UAAU,IAC7CC,EAAU,IAAIC,KAElB,QAAIJ,EAAaK,IAAMF,EAAQG,WAM/B,OAAO,G,6HCnDLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BC,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAbgB,IAchBC,MAAM,eAAD,OAdW,IAcX,OACLT,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJjB,QAAS,QAEXG,OAAQ,CACNU,MA3BgB,IA4BhBK,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVP,MAhCgB,IAiChBT,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASK,kBAGzCO,YAAY,aACVjB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,gBAEvCY,UAAW,SACXT,MAAOf,EAAMyB,QAAQ,GAAK,GACzBzB,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BZ,MAAOf,EAAMyB,QAAQ,GAAK,IAG9BG,QAAQ,aACN1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAAS/B,EAAMyB,QAAQ,EAAG,IACvBzB,EAAMgC,OAAOJ,SAElBK,QAAS,CACPC,SAAU,EACVH,QAAS/B,EAAMyB,QAAQ,IAEzBU,eAAe,aACbjC,QAAS,QACRF,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BzB,QAAS,SAGbkC,cAAc,aACZlC,QAAS,QACRF,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BzB,QAAS,SAGbmC,KAAM,CACJH,SAAU,OA6FCI,gBAzFA,SAACC,GACd,IAAMC,EAAU1C,IADQ,EAEQ2C,IAAMC,SAAS,MAFvB,mBAEjBC,EAFiB,KAEPC,EAFO,KAGlBC,EAAWC,cACXC,EAAaC,QAAQL,GACrBM,EAAkB,WACtBL,EAAY,OAQRM,EAAS,8BACTC,EACJ,kBAACC,EAAA,EAAD,CACET,SAAUA,EACVU,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIN,EACJO,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMZ,EACNa,QAASX,GAET,kBAACY,EAAA,EAAD,CAAUC,QAASb,GAAnB,WACA,kBAACY,EAAA,EAAD,CAAUC,QAjBC,WDvDK,IAAAC,ECwDlBlB,GDxDkBkB,ECwDWxB,EAAMwB,QDvD9B,SAAAlB,GACLxF,aAAaqB,WAAWjC,GACxBY,aAAaqB,WAAWjC,GACxBoG,EA7BwC,CAC1CzD,KFvBoB,WEoDlB2E,EAAQC,KAAK,aCoDbf,MAeE,WAIJ,OACE,yBAAKgB,UAAWzB,EAAQvC,MACtB,kBAACiE,EAAA,EAAD,CACEC,SAAS,QACTF,UAAWG,YAAK5B,EAAQrC,OAAT,eACZqC,EAAQ3B,YAAc0B,EAAMoB,QAG/B,kBAAC,IAAD,KACE,kBAACU,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXT,QAASvB,EAAMiC,iBACfC,KAAK,QACLR,UAAWG,YAAK5B,EAAQvB,WAAT,eACZuB,EAAQrB,KAAOoB,EAAMoB,MAAQnB,EAAQrB,QAGxC,kBAAC,IAAD,OAEF,kBAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,8CAEE,kBAACF,EAAA,EAAD,CAAYC,QAAQ,SACjB,IADH,kBAEkBE,QAIpB,yBAAKZ,UAAWzB,EAAQH,OAExB,yBAAK4B,UAAWzB,EAAQL,gBACtB,kBAACkC,EAAA,EAAD,CAAYE,aAAW,mBAAmBD,MAAM,WAC9C,kBAACQ,EAAA,EAAD,CAAOC,aAAc,EAAGT,MAAM,aAC5B,kBAAC,IAAD,QAGJ,kBAACD,EAAA,EAAD,CAAYE,aAAW,4BAA4BD,MAAM,WACvD,kBAACQ,EAAA,EAAD,CAAOC,aAAc,GAAIT,MAAM,aAC7B,kBAAC,IAAD,QAGJ,kBAACD,EAAA,EAAD,CACEI,KAAK,MACLF,aAAW,0BACXS,gBAAe9B,EACf+B,gBAAc,OACdX,MAAM,UACNR,QAAS,SAACoB,GAAD,OAAWtC,EAAYsC,EAAMC,iBAEtC,kBAAC,IAAD,UAKPhC,M,6KCjKDrD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,WAAY,CACVP,MAJgB,IAKhBT,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASK,kBAGzCO,YAAa,CACXjB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,gBAEvCY,UAAW,SACXT,MAAOf,EAAMyB,QAAQ,IAEvB2D,WAAY,CACVC,gBAAiB,oCAEnBhF,OAAQ,CACNU,MAtBgB,IAuBhBK,WAAY,EACZC,WAAY,UAEdO,QAAQ,aACN1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBwD,gBAAiB,UACjBvD,QAAS/B,EAAMyB,QAAQ,EAAG,IACvBzB,EAAMgC,OAAOJ,SAElB2D,SAAU,CACRD,gBAAiB,UACjBhB,MAAO,eAII,YAAC/B,GAAW,IAAD,IAClBC,EAAU1C,KAEhB,OACE,kBAAC0F,GAAA,EAAD,CACEb,QAAQ,YACRV,UAAWG,aAAI,mBACZ5B,EAAQlB,WAAaiB,EAAMoB,MADf,cAEZnB,EAAQjB,aAAegB,EAAMoB,MAFjB,IAIfnB,QAAS,CACPiD,MAAOrB,aAAI,mBACR5B,EAAQlB,WAAaiB,EAAMoB,MADnB,cAERnB,EAAQ4C,WAAa7C,EAAMoB,MAFnB,cAGRnB,EAAQjB,aAAegB,EAAMoB,MAHrB,MAOb,yBAAKM,UAAWzB,EAAQZ,SACtB,kBAACyC,EAAA,EAAD,CAAYP,QAASvB,EAAMmD,mBACzB,yBACEC,IAAG,UAAKd,GAAL,0BACHe,OAAO,OAET,kBAAC,KAAD,CAAiBC,MAAO,CAAEvB,MAAO,aAGpC/B,EAAMoB,MAAQ,yBAAKiC,OAAQ,IAAKD,IAAI,0BAA0BG,IAAI,KACnE,kBAACC,GAAA,EAAD,MAEA,kBAACC,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CACEC,UAAWC,KACXC,GAAG,QACHC,QAAM,EACNC,IAAI,OACJC,gBAAiB/D,EAAQ+C,UAEzB,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAIxB,kBAACT,GAAA,EAAD,CACEC,UAAWC,KACXC,GAAG,SACHC,QAAM,EACNC,IAAI,QACJC,gBAAiB/D,EAAQ+C,UAEzB,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAIxB,kBAACT,GAAA,EAAD,CACEC,UAAWC,KACXC,GAAG,UACHC,QAAM,EACNC,IAAI,SACJC,gBAAiB/D,EAAQ+C,UAEzB,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAIxB,kBAACT,GAAA,EAAD,CACEC,UAAWC,KACXC,GAAG,eACHC,QAAM,EACNC,IAAI,cACJC,gBAAiB/D,EAAQ+C,UAEzB,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oB,mGC5H1B5G,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0G,SAAU,IACVC,UAAW,IAEbC,KAAM,CACJ9F,MAAO,OACP6F,UAAW5G,EAAMyB,QAAQ,IAE3BqF,OAAQ,CACNC,OAAQ/G,EAAMyB,QAAQ,EAAG,EAAG,QAIjB,YAAAc,GACb,IAAMC,EAAU1C,KACV+C,EAAWC,cACXkE,EAAeC,aAAY,qBAAGD,gBACpCE,qBAAU,WACRC,KAA6B5E,EAAMwB,QAAQC,KAAK,YAC/C,IA8DH,OACE,kBAACoD,GAAA,EAAD,CAAMnD,UAAWzB,EAAQvC,MACvB,kBAACoH,GAAA,EAAD,CACEnB,UAAU,MACVJ,IAAI,wBACJF,OAAO,MACP0B,MAAK,UAAKzC,GAAL,6BACL0C,MAAM,0BAER,kBAACC,GAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC9C,QAAQ,KAAKuB,UAAU,MAAhD,SAGA,kBAAC,KAAD,CACEwB,cAAe,CAAEC,SAAU,GAAIC,SAAU,IACzCC,SAAU,SAACC,EAAD,GAAgC,IHpF9BC,EAAOhE,EGoFEiE,EAAoB,EAApBA,cACnBnF,GHrFUkF,EGqFkBD,EHrFX/D,EGqFmBxB,EAAMwB,QHpFpD,uCAAO,WAAMlB,GAAN,qBAAA9F,EAAA,sEAEH8F,EAtBqC,CACzCzD,KFZ4B,mBE+BrB,SAGgBH,EAAWb,KAAK3B,EAAkBsL,GAHlD,OAIwB,QADvB1J,EAHD,QAIQE,KAAKF,QAAkB,EACAA,EAAOE,KAA/BD,EADuB,EACvBA,MAAOJ,EADgB,EAChBA,aACfb,aAAaoB,QAAQhC,EAAkB6B,GACvCjB,aAAaoB,QAAQhC,EAA0ByB,GAC/C2E,EAAS3D,EAAuBb,IAChC0F,EAAQC,KAAK,WAEbnB,EAASxD,EAAsBhB,IAX9B,gDAcHwE,EAASxD,EAAsB,CAAEd,KAAM,CAAES,QAAQ,EAAD,OAd7C,yDAAP,mDAAM,KGqFIgJ,GAAc,MAGf,SAAAzF,GAAK,OAhFG,SAAC,GAMX,IALLuF,EAKI,EALJA,OACAG,EAII,EAJJA,aACAC,EAGI,EAHJA,aAEAC,GACI,EAFJC,cAEI,EADJD,cAEA,OACE,0BAAMlE,UAAWzB,EAAQqE,KAAMwB,YAAU,EAACR,SAAUK,GAClD,kBAACI,GAAA,EAAD,CACE3D,QAAQ,WACRoC,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACThF,GAAG,WACHiF,MAAM,WACNC,SAAUT,EACVF,MAAOD,EAAOH,SACdgB,aAAa,QACbC,WAAS,IAEX,kBAACN,GAAA,EAAD,CACE3D,QAAQ,WACRoC,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACTE,SAAUT,EACVF,MAAOD,EAAOF,SACdiB,KAAK,WACLJ,MAAM,WACNrJ,KAAK,WACLoE,GAAG,WACHmF,aAAa,qBAEd3B,EAAa8B,SACZ,kBAACC,GAAA,EAAD,CAAOC,SAAS,QAAQnD,MAAO,CAAEoD,aAAc,IAA/C,oBAKF,kBAACC,GAAA,EAAD,CACE9J,KAAK,SACLoJ,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACN6E,SAAUhB,EACVlE,UAAWzB,EAAQsE,QANrB,WAUCqB,GAAgB,kBAACiB,GAAA,EAAD,CAAkBvD,MAAO,CAAEe,UAAW,MACvD,kBAACyC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,YACtB,kBAACC,GAAA,EAAD,CAAMtD,UAAWuD,KAAYrD,GAAG,YAAYzB,QAAQ,SAApD,qCA4BU+E,CAASnH,SCtGhBoH,GAA2B,SAAAxK,GAAO,MAAK,CAClDC,KNV6B,kBMW7BD,QAASA,ICPLW,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0G,SAAU,KAEZlB,MAAO,CACLmB,UAAW5G,EAAMyB,QAAQ,GACzBvB,QAAS,OACT0J,cAAe,SACf/H,WAAY,UAEdgI,OAAQ,CACN9C,OAAQ/G,EAAMyB,QAAQ,GACtB6D,gBAAiBtF,EAAM8J,QAAQC,UAAUC,MAE3CnD,KAAM,CACJ9F,MAAO,OACP6F,UAAW5G,EAAMyB,QAAQ,IAE3BqF,OAAQ,CACNC,OAAQ/G,EAAMyB,QAAQ,EAAG,EAAG,QAIjB,YAAAc,GACb,IAAMC,EAAU1C,KACV+C,EAAWC,cAEX4G,EAAW,SAAC,GAMX,IALL5B,EAKI,EALJA,OACAG,EAII,EAJJA,aACAC,EAGI,EAHJA,aAEAC,GACI,EAFJC,cAEI,EADJD,cAEA,OACE,0BAAMlE,UAAWzB,EAAQqE,KAAMwB,YAAU,EAACR,SAAUK,GAClD,kBAACI,GAAA,EAAD,CACE3D,QAAQ,WACRoC,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACThF,GAAG,WACHiF,MAAM,WACNC,SAAUT,EACVF,MAAOD,EAAOH,SACdgB,aAAa,QACbC,WAAS,IAEX,kBAACN,GAAA,EAAD,CACE3D,QAAQ,WACRoC,OAAO,SACPwB,UAAQ,EACRC,WAAS,EACTE,SAAUT,EACVF,MAAOD,EAAOF,SACdiB,KAAK,WACLJ,MAAM,WACNrJ,KAAK,WACLoE,GAAG,WACHmF,aAAa,qBAEf,kBAACO,GAAA,EAAD,CACE9J,KAAK,SACLoJ,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNL,UAAWzB,EAAQsE,OACnBqC,SAAUhB,GANZ,UAUA,kBAACe,GAAA,EAAD,CACEpF,QAAS,kBAAMvB,EAAMwB,QAAQkG,UAC7B7K,KAAK,SACLoJ,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNL,UAAWzB,EAAQ0H,QANrB,YAcN,OACE,kBAAC9C,GAAA,EAAD,CAAMnD,UAAWzB,EAAQvC,MACvB,kBAACuH,GAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC9C,QAAQ,KAAKuB,UAAU,MAAhD,YAGA,kBAAC,KAAD,CACEwB,cAAe,CAAEC,SAAU,GAAIC,SAAU,IACzCC,SAAU,SAACC,EAAD,GAAgC,IDlF3BC,EAAOhE,ECkFDiE,EAAoB,EAApBA,cACnBnF,GDnFakF,ECmFqBD,EDnFd/D,ECmFsBxB,EAAMwB,QDlF1D,uCAAO,WAAMlB,GAAN,eAAA9F,EAAA,sEAEH8F,EAlBwC,CAC5CzD,KNH+B,sBMkBxB,SAGgBH,EAAWb,KAAK3B,EAAqBsL,GAHrD,OAIwB,QADvB1J,EAHD,QAIQE,KAAKF,QACdwE,EAjB6C,CACnDzD,KNN8B,mBMO9BD,QAeyCd,IACnC0F,EAAQkG,UAERpH,EAAS8G,GAAyBtL,IARjC,gDAWHwE,EAAS8G,GAAyB,CAAEpL,KAAM,CAAES,QAAQ,EAAD,OAXhD,yDAAP,mDAAM,KCmFIgJ,GAAc,MAGf,SAAAzF,GAAK,OAAImH,EAASnH,SC5GdxC,gBAAW,SAAAC,GAAK,MAAK,CAClCC,KAAM,CACJc,MAAO,OACP6F,UAAW,IAEbuD,KAAM,CACJ7F,MAAO,OAET8F,UAAW,CACT5I,UAAW,SACXoE,OAAQ,IACRyE,KAAM,EACNtJ,MAAO,OACPuJ,UAAW,KAEbC,cAAe,CACb3E,OAAQ,IACR0E,UAAW,KAEbE,iBAAkB,CAChB5E,OAAQ,KAEV6E,cAAe,CACb7E,OAAQ,GACRgB,UAAW,IAEb8D,UAAW,CACT5J,WAAY,IAEd6J,WAAY,CACVzJ,YAAa,Q,SChCJ0J,GAAb,uCACIC,SAAW,EADf,KAEIC,MAAQ,EAFZ,KAGIC,KAAO,EAHX,KAIIC,OAAS,EAJb,KAKIC,WAAa,IALjB,KAMIC,aAAe,IANnB,KAOIC,eAAiB,IAPrB,KAQIC,SAAW,KCCTC,GAAgB,SAACxI,EAAUyI,GAC/B,IAAIC,EAAa,EAD6B,uBAG9C,YAAiBD,EAAjB,+CAA6B,CAAC,IAArBE,EAAoB,QAC3BD,GAAcC,EAAKC,MAAQD,EAAKE,KAJY,kFAQ9C7I,EAb4C,CAC5CzD,KV2B+B,oBU1B/BD,QAY4B,CACxBmM,aACAC,aACAI,OANkB,IAAbJ,M,mBCJI,YAAAhJ,GACb,IAAMqJ,EAAc3E,aAAY,qBAAG2E,eAC7B/I,EAAWC,cAeXN,EAbYzC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ8B,QAAS,IAEXsE,OAAQ,CACNT,OAAQ,IACRiG,SAAU,IAEZC,MAAO,CACLlF,UAAW,OAIC9G,GAUViM,EAAe,SAACC,EAAO5D,GAC3B,IAAI4C,EAASgB,EAAQJ,EAAYK,YAE/B7D,EAAc,SADZ4C,EAAS,EACaA,EAEA,IAItBkB,EAAe,SAACC,EAAUC,EAAUhE,GACxC,IAAMiE,EAAWF,EAAWC,EAC5BhE,EAAc,QAASiE,GACvBN,EAAaM,EAAUjE,IAQnBkE,EAAgB,SAAAxE,GACpB,IDFyBvJ,ECErBgO,EAAQ,IAAI3B,GAChB2B,EAAMzB,MAAQc,EAAYK,YAC1BM,EAAMxB,KAAOjD,EAAOkE,MACpBO,EAAMvB,OAASlD,EAAOkD,OACtBuB,EAAMrB,aAAe,OACrBqB,EAAMpB,eAAiB,OACvBoB,EAAMtB,WAAa1I,EAAMiK,MACzB3J,GDTyBtE,ECSUgO,EDR9B,SAAC1J,EAAU4J,GAChBxN,EAAWb,KAAK3B,EAAwB8B,GAAMmO,MAAK,WAEjDD,IAAWb,YAAYe,YAAc,GACrC9J,EAAS,CACPzD,KV9B2B,sBU+B3BD,QAAS,CACPyN,eAAe,EACfZ,MAAO,YCGTtC,EAAW,SAAC,GAA+B,IAA7B5B,EAA4B,EAA5BA,OAAQM,EAAoB,EAApBA,cAC1B,OACE,kBAAC,KAAD,KAzCkB,SAAAN,GACpB,IACE,OAAOA,EAAOkE,MAAQJ,EAAYK,YAClC,MAAOY,GACP,OAAO,GAsCJC,CAAchF,IACb,kBAAC,KAAD,CACEnD,QAAQ,WACRV,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTuE,gBAAiB,CACfC,QAAQ,GAEV9G,UAAWoC,KACXO,KAAK,SACLzJ,KAAK,OACLqJ,MAAM,SACNwE,WAAY,CACVpH,MAAO,CAAEgG,SAAU,IACnBqB,UAAU,EACVC,eACE,kBAACC,GAAA,EAAD,CAAgBjJ,SAAS,SAAzB,UAMR,kBAAC,KAAD,CACEkJ,UAAQ,EACR1I,QAAQ,WACRV,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,QACLzJ,KAAK,OACLqJ,MAAM,QACNwE,WAAY,CACVpH,MAAO,CAAEgG,SAAU,GAAIvH,MAAO,SAC9B4I,UAAU,EACVC,eACE,kBAACC,GAAA,EAAD,CAAgBjJ,SAAS,SAAzB,UAKN,yBAAK0B,MAAO,CAAEe,UAAW,KACvB,kBAACyC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgB9H,QAAS,GAC/C,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,IAAMpE,EAAOkE,MAAO5D,KALlD,gBAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,IAAKpE,EAAOkE,MAAO5D,KALjD,cAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,IAAKpE,EAAOkE,MAAO5D,KALjD,eAWJ,kBAACiB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgB9H,QAAS,GAC/C,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,GAAIpE,EAAOkE,MAAO5D,KALhD,aAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,GAAIpE,EAAOkE,MAAO5D,KALhD,aAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBAAMoI,EAAa,GAAIpE,EAAOkE,MAAO5D,KALhD,cAWJ,kBAACiB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgB9H,QAAS,GAC/C,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,SACNR,QAAS,kBAAMsE,EAAc,QAAS,KALxC,QAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACNR,QAAS,kBApJF,SAAAsE,GACnBA,EAAc,QAASwD,EAAYK,aACnCF,EAAa,EAAG3D,GAkJWmF,CAAanF,KAL9B,UAUF,kBAACiB,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,IAAE,GACX,kBAACpE,GAAA,EAAD,CACEjF,UAAWzB,EAAQ6D,OACnBmC,WAAS,EACT7D,QAAQ,WACRL,MAAM,UACNR,QAAS,kBAAMwI,EAAcxE,KAL/B,eAgBZ,OACE,yBAAK7D,UAAWzB,EAAQvC,MACtB,kBAAC,KAAD,CAAQyH,cAAe,CAAEsE,MAAO,KAAM,SAAAzJ,GAAK,OAAImH,EAASnH,QCxNjDiL,GAAyB,SAAArO,GAAO,MAAK,CAChDC,KZE2B,gBYD3BD,YAqBWsO,GAAc,WACzB,OAAO,SAAA5K,GACLA,EApBmC,CACrCzD,KZJ4B,mBYwB1BsO,GAAc7K,KAuDZ6K,GAAa,uCAAG,WAAM7K,GAAN,eAAA9F,EAAA,+EAECkC,EAAW0O,IAAIlR,GAFhB,OAEd4B,EAFc,OAGlBwE,EAAS2K,GAAuBnP,EAAOE,OAHrB,gDAMlBsE,EA9EiC,CACnCzD,KZN0B,iBY6EN,yDAAH,sD,iFCpEJ,YAAAmD,GACb,IAAMqJ,EAAc3E,aAAY,qBAAG2E,eAC7BgC,EAAe3G,aAAY,qBAAG2G,gBAC9B/K,EAAWC,cACXN,EAAU1C,KAyIhB,OAJAoH,qBAAU,WACRrE,EAASgL,QACR,IAGD,yBAAK5J,UAAWzB,EAAQvC,MACtB,kBAACoJ,GAAA,EAAD,CAAMC,WAAS,EAAC7H,QAAS,GAEvB,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,GACb,kBAACQ,GAAA,EAAD,CACEC,UAAW,EACXlI,MAAO,CACLmI,WAAY,GACZC,cAAe,GACf3I,gBAAiB,YAGlBsG,EAAYsC,eAlJnB,yBAAKjK,UAAU,WAAW4B,MAAO,CAAEyE,UAAW,MAC5C,kBAAC6D,GAAD,CAAS3B,MAAO1O,KAAKC,UAAU6N,EAAYe,gBAyDvB,WAAO,IACvBtO,EAAWuP,EAAXvP,OACR,OACE,kBAAC+P,GAAA,EAAD,CAAWvI,MAAO,CAAED,OAAQ,OAAQyI,UAAW,WAC7C,kBAAChF,GAAA,EAAD,CAAMC,WAAS,EAAC7H,QAAS,EAAGwC,UAAWzB,EAAQgI,kBACjC,OAAXnM,GACCA,EAAOiQ,KAAI,SAAC9C,EAAM+C,GAAP,OACT,kBAAClF,GAAA,EAAD,CACE/C,IAAKiI,EACL/C,MAAI,EACJ8B,GAAI,EACJxJ,QAAS,kBAAMjB,EHzEP,SAAA2I,GACtB,OAAO,SAAC3I,EAAU4J,GAChB,IAAInB,EAAamB,IAAWb,YAAYe,YACpC6B,EAAQlD,EAAWmD,QAAQjD,IAChB,IAAXgD,GACFhD,EAAKE,IAAM,EACXJ,EAAWoD,QAAQlD,IAEnBF,EAAWkD,GAAO9C,MAGpBL,GAAcxI,EAAUyI,IG8DYqD,CAAqBnD,KAC7C3F,MAAO,CAAE+I,OAAQ,YAEjB,kBAACxH,GAAA,EAAD,KACE,kBAACyH,GAAA,EAAD,KACE,kBAACxH,GAAA,EAAD,CACEnB,UAAU,MACVJ,IAAI,wBACJF,OAAO,MACP0B,MAAK,UAAK9K,EAAL,mBAAwBgP,EAAKlE,OAClCC,MAAM,0BAER,kBAACC,GAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAYE,QAAM,EAAC6C,cAAY,GAC5B+D,EAAK3C,MAER,kBAACQ,GAAA,EAAD,CACEC,WAAS,EACTzD,MAAO,CACLD,OAAQ,GACR1F,QAAS,OACT0J,cAAe,MACfkF,UAAW,WAGb,yBAAKjJ,MAAO,CAAE3D,SAAU,IACtB,kBAACwC,EAAA,EAAD,CACEC,QAAQ,QACRL,MAAM,gBACN4B,UAAU,KAHZ,IAKIsF,EAAKuD,WALT,YAKyBvD,EAAKC,SA9F/BuD,EAiGexD,GA/FlB,IADNI,EAAYe,YAAY8B,QAAQO,IAiGtB,yBACEnJ,MAAO,CAAE3F,QAAS,OAAQ0J,cAAe,QAEzC,kBAAClF,EAAA,EAAD,CACEmB,MAAO,CAAE3E,YAAa,GACtByD,QAAQ,QACRL,MAAM,eAHR,IAKIkH,EAAKE,KAGT,kBAAC,KAAD,CAAWzH,UAAWzB,EAAQ2H,cA7GjC,IAAA6E,OA4ImCC,KAKpD,kBAAC5F,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,GACb,yBACEzH,MAAO,CACLc,SAAU,SAGZ,kBAACmH,GAAA,EAAD,CAAOjI,MAAO,CAAEmI,WAAY,GAAIpH,UAAW,GAAKmH,UAAW,GAEzD,kBAAC1E,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR1D,MAAO,CAAEoD,aAAc,KAEvB,kBAACvE,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWzB,EAAQkI,WAA5C,UAGA,kBAAChG,EAAA,EAAD,CACEC,QAAQ,KACRL,MAAM,UACNL,UAAWzB,EAAQmI,YAEnB,kBAAC,KAAD,CACE5C,MAAO6D,EAAYsD,QACnBC,YAAa,OACbC,aAAc,EACdC,mBAAmB,EACnBC,OAAQ,aAMd,kBAACjG,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtB,kBAAC7E,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWzB,EAAQkI,WAA5C,SAGA,kBAAChG,EAAA,EAAD,CACEC,QAAQ,KACRL,MAAM,UACNL,UAAWzB,EAAQmI,YAEnB,kBAAC,KAAD,CACE5C,MAAO6D,EAAYK,YACnBkD,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnBD,OAAQ,aAKb1D,EAAYK,YAAc,IAAML,EAAYsC,gBAC3C,kBAAChF,GAAA,EAAD,CACEjF,UAAWzB,EAAQiI,cACnBjC,WAAS,EACT7D,QAAQ,YACRL,MAAM,YACNR,QAAS,kBAAMjB,GHrKxB,SAACA,EAAU4J,GAChB5J,EAAS,CACPzD,KV3C6B,sBU4C7BD,QAAS,CACPyN,eAAgBH,IAAWb,YAAYsC,eACvClC,OAAQS,IAAWb,YAAY4D,eGkKrB,kBAAC9K,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAKN,kBAACmJ,GAAA,EAAD,CACEC,UAAW,EACXlI,MAAO,CACLD,OAAQ,IACR1F,QAAS,OACT0J,cAAe,SACf9H,eAAgB,SAChBD,WAAY,WAGb+J,EAAYe,YAAY8C,OAAS,EAChC,kBAACzJ,GAAA,EAAD,CACEE,UAAU,MACVjC,UAAWzB,EAAQ4H,UACnB7F,aAAW,mBA1NDqH,EAAhBe,YAEW2B,KAAI,SAAA9C,GAAI,OACzB,kBAACvF,GAAA,EAAD,CAAUI,QAAM,EAACqJ,SAAO,EAACzL,UAAWzB,EAAQ+H,eAC1C,kBAAClB,GAAA,EAAD,CAAMC,WAAS,EAAChD,IAAKkF,EAAKuD,WAAYtN,QAAS,GAE7C,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,GACb,yBACExH,IAAI,aACJH,IAAG,UAAKnJ,EAAL,mBAAwBgP,EAAKlE,OAChCzB,MAAO,CAAE9E,MAAO,OAIpB,kBAACsI,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,EAAGwB,UAAU,UAC1B,kBAACpK,EAAA,EAAD,CACEJ,MAAM,gBACN4B,UAAU,IACVL,MAAO,CAAEyE,UAAW,GAAIxJ,WAAY,KAEnC0K,EAAK3C,OAIV,kBAACQ,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,EAAGqC,aAAa,UAC7B,kBAACjL,EAAA,EAAD,CAAYkL,MAAM,QAAQtL,MAAM,eAC9B,kBAAC,KAAD,CACEyD,MAAOyD,EAAKC,MACZ0D,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnBD,OAAQ,WAEV,6BATF,KASW9D,EAAKE,IAThB,IAUE,6BACA,kBAAC,KAAD,CACE5H,QAAS,kBAAMjB,GHtCJmM,EGsCqCxD,EHrCvD,SAAC3I,EAAU4J,GAChB,IAAInB,EAAamB,IAAWb,YAAYe,YACpCkD,EAAavE,EAAWmD,QAAQO,GAEpC1D,EAAWgD,KAAI,SAAA9C,GACTA,EAAKuD,aAAeC,EAAQD,aAC9BvD,EAAKE,IAAM,MAGfJ,EAAWwE,OAAOD,EAAY,GAE9BxE,GAAcxI,EAAUyI,MAZD,IAAA0D,aGgOX,yBACErJ,IAAG,UAAKd,GAAL,gCACHgB,MAAO,CAAED,OAAQ,IAAK7E,MAAO,a,4FCxOhCgP,GA/BG,SAAAxN,GAChB,OACE,kBAAC6E,GAAA,EAAD,KACE,kBAACiC,GAAA,EAAD,CAAMC,WAAS,EAACzD,MAAO,CAAEmK,UAAW,KAClC,kBAAC3G,GAAA,EAAD,CAAMmC,MAAI,EAAC3F,MAAO,CAAE3D,SAAU,EAAGH,QAAS,KACxC,kBAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAM,eAC5B/B,EAAMgF,OAET,kBAAC7C,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAM,iBAC5B/B,EAAM0N,WAIX,kBAAC5G,GAAA,EAAD,CACEmC,MAAI,EACJ3F,MAAO,CACLP,gBAAiB/C,EAAM+B,MACvBA,MAAO,QACPpE,QAAS,OACT2B,WAAY,SACZC,eAAgB,SAChBoO,SAAU,KAGXzN,IAAM0N,cAAc5N,EAAM6N,KAAM,CAAEvE,SAAU,c,oFCNjD/L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACP6F,UAAW,QAIA,YAAArE,GACb,IAAMC,EAAU1C,KACV8N,EAAe3G,aAAY,qBAAG2G,gBAC9B/K,EAAWC,cAHK,EAKgBJ,mBAAS,MALzB,mBAKf2N,EALe,KAKFC,EALE,OAMc5N,oBAAS,GANvB,mBAMf6N,EANe,KAMHC,EANG,OAOwB9N,mBAAS,MAPjC,mBAOf+N,EAPe,KAOEC,EAPF,KAStBxJ,qBAAU,WACRrE,EAASgL,QACR,IAEH,IAAM8C,EAAU,CACd,CACEpJ,MAAO,KACPuE,MAAO,KACP8E,OAAQ,SAAApF,GAAI,OAAI,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAAS6G,EAAKhI,MAEpD,CACE+D,MAAO,QACPuE,MAAO,QACP+E,UAAW,CAAE9O,QAAS,GACtB6O,OAAQ,SAAApF,GAAI,OACV,yBACE7F,IAAG,UAAKnJ,EAAL,mBAAwBgP,EAAKlE,MAA7B,kBAA4CwJ,KAAKC,UACpDlL,MAAO,CAACD,OAAQ,GAAIoL,aAAc,UAIxC,CACEzJ,MAAO,OACPuE,MAAO,OACP+E,UAAW,CAAEX,SAAU,KACvBU,OAAQ,SAAApF,GAAI,OAAI,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAAS6G,EAAK3C,QAEpD,CACEtB,MAAO,QACPuE,MAAO,QACP8E,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAAC,KAAD,CACEoD,MAAOyD,EAAKC,MACZ0D,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnBD,OAAQ,cAKhB,CACE/H,MAAO,QACPuE,MAAO,QACP8E,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAAC,KAAD,CACEoD,MAAOyD,EAAKyF,MACZ9B,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnB2B,OAAQ,YAKhB,CACE3J,MAAO,UACPuE,MAAO,UACP8E,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,KACE,kBAAC,KAAD,CAAQyM,OAAO,cAAc3F,EAAK4F,aAMpCC,EAAU,CACd,CACEjB,KAAM,OACNkB,UAAW,CAAEhN,MAAO,WACpBiN,QAAS,OACTzN,QAAS,SAACoB,EAAOsM,GAAR,OACPjP,EAAMwB,QAAQC,KAAK,eAAiBwN,EAAQhO,MAEhD,CACE4M,KAAM,SACNkB,UAAW,CAAEhN,MAAO,UACpBiN,QAAS,SACTzN,QAAS,SAACoB,EAAOsM,GACfd,EAAmBc,GACnBhB,GAAc,MAKdiB,EAAsB,WH7DD,IAAAjO,EG8DzBX,GH9DyBW,EG8DWiN,EAAgBjN,GH7DtD,uCAAO,WAAMX,GAAN,SAAA9F,EAAA,6DACL8F,EAtDmC,CACrCzD,KZJ4B,mBYwDrB,SAECH,EAAWyS,OAAX,UAAqBjV,EAArB,YAA2C+G,IAF5C,uBAGCkK,GAAc7K,GAHf,2CAAP,mDAAM,KG8DJA,EAASgL,MACT2C,GAAc,IAGVmB,EAAc,WAClBnB,GAAc,IA2ChB,OACE,yBAAKvM,UAAWzB,EAAQvC,MAEtB,kBAACoJ,GAAA,EAAD,CAAMC,WAAS,EAACzD,MAAO,CAAEoD,aAAc,IAAMxH,QAAS,GACpD,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAACoG,GAAI,EAAGC,GAAI,GACpB,kBAAC,GAAD,CACEzB,KAAM0B,KACNvK,MAAM,QACN0I,SAAS,UACT3L,MAAM,aAIV,kBAAC+E,GAAA,EAAD,CAAMmC,MAAI,EAACoG,GAAI,EAAGC,GAAI,GACpB,kBAAC,GAAD,CACEzB,KAAM2B,KACNxK,MAAM,QACN0I,SAAS,SACT3L,MAAM,aAIV,kBAAC+E,GAAA,EAAD,CAAMmC,MAAI,EAACoG,GAAI,EAAGC,GAAI,GACpB,kBAAC,GAAD,CACEzB,KAAM4B,KACNzK,MAAM,SACN0I,SAAS,SACT3L,MAAM,aAIV,kBAAC+E,GAAA,EAAD,CAAMmC,MAAI,EAACoG,GAAI,EAAGC,GAAI,GACpB,kBAAC,GAAD,CACEzB,KAAM6B,KACN1K,MAAM,WACN0I,SAAS,SACT3L,MAAM,cAKZ,kBAAC,KAAD,CACEd,GAAG,aACH+D,MAAM,QACNoJ,QAASA,EACTU,QAASA,EACT9S,KAAMqP,EAAavP,OAASuP,EAAavP,OAAS,GAClD6T,WAAY,SAACC,EAAK9B,GAAN,OAAsBC,EAAeD,IACjD+B,QAAS,CACPC,SAAU,EACVC,SAAU,SAAAd,GAAO,MAAK,CACpBlM,gBACE+K,GAAeA,EAAYkC,UAAU/O,KAAOgO,EAAQe,UAAU/O,GAC1D,OACA,UAGVgP,WAAY,CACVC,QAAS,SAAAlQ,GAAK,OACZ,6BACE,kBAAC,iBAAkBA,GACnB,yBAAKsD,MAAO,CAAE9D,QAAS,aACrB,kBAACmH,GAAA,EAAD,CACEV,WAAS,EACT7D,QAAQ,YACRL,MAAM,UACN4B,UAAWsD,KACXpD,GAAG,iBALL,gBArGY,OAApBqK,EACK,GAIP,kBAACiC,GAAA,EAAD,CACE/O,KAAM4M,EACN9M,aAAW,EACXG,QAAS,aACT+O,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,GAAA,EAAD,CAAarP,GAAG,4BACd,yBACEmC,IAAG,UAAKnJ,EAAL,mBACDiU,EAAgBnJ,MADf,kBAEOwJ,KAAKC,UACflL,MAAO,CAAE9E,MAAO,IAAKiQ,aAAc,QAErC,6BAPF,oCAQoC,IAAMP,EAAgB5H,MAE1D,kBAACiK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBvP,GAAG,kCAAtB,wCAIF,kBAACwP,GAAA,EAAD,KACE,kBAAC9J,GAAA,EAAD,CAAQpF,QAAS6N,EAAarN,MAAM,WAApC,UAGA,kBAAC4E,GAAA,EAAD,CAAQpF,QAAS2N,EAAqBnN,MAAM,WAA5C,c,UCxJJxE,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,MACP6F,UAAW,KAEbkF,MAAO,CACLlF,UAAW,IAEbqM,KAAM,CACJlR,QAAS,QAIE,YAAAQ,GACb,IAAMC,EAAU1C,KACV+C,EAAWC,cAiFXoQ,EAAmB,SAAApL,GACvB,GAAIA,EAAOqL,SACT,OAAO,yBAAKxN,IAAKmC,EAAOqL,SAAUtN,MAAO,CAAED,OAAQ,QAIvD,OACE,kBAACwI,GAAA,EAAD,CAAWnK,UAAWzB,EAAQvC,MAG5B,yBAAKgE,UAAU,WAAW4B,MAAO,CAAEe,UAAW,KAC5C,kBAAC,KAAD,CACEwM,SAAU,SAAAtL,GACR,IAAIuL,EAAS,GAIb,OAHKvL,EAAOe,OAAMwK,EAAOxK,KAAO,cAC3Bf,EAAOmJ,QAAOoC,EAAOpC,MAAQ,eAC7BnJ,EAAO2D,QAAO4H,EAAO5H,MAAQ,eAC3B4H,GAET3L,cAAe,CAAEmB,KAAM,GAAIoI,MAAO,GAAIxF,MAAO,IAC7C5D,SAAU,SAACC,EAAD,GAAgC,IAArBE,EAAoB,EAApBA,cACfsL,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ1L,EAAOe,MAC/ByK,EAASE,OAAO,QAAS1L,EAAO2D,OAChC6H,EAASE,OAAO,QAAS1L,EAAOmJ,OAChCqC,EAASE,OAAO,QAAS1L,EAAO2L,MAChC5Q,EJpGc,SAACyQ,EAAUvP,GACnC,8CAAO,WAAMlB,GAAN,SAAA9F,EAAA,sEACCkC,EAAWb,KAAK3B,EAAoB6W,GADrC,OAELvP,EAAQkG,SAFH,2CAAP,mDAAM,GImGa4D,CAAwByF,EAAU/Q,EAAMwB,UACjDiE,GAAc,MAGf,SAAAzF,GAAK,OA7GG,SAAC,GAA+B,IAA7BuF,EAA4B,EAA5BA,OAAQM,EAAoB,EAApBA,cAC1B,OACE,kBAAC,KAAD,KACE,kBAAChB,GAAA,EAAD,CAAMnD,UAAWzB,EAAQyQ,MACvB,kBAACzL,GAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC9C,QAAQ,MAAjC,gBAIA,kBAAC,KAAD,CACEV,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,OACLzJ,KAAK,OACLqJ,MAAM,SAER,6BACA,kBAAC,KAAD,CACExE,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,QACLzJ,KAAK,SACLqJ,MAAM,UAGR,kBAAC,KAAD,CACExE,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,QACLzJ,KAAK,SACLqJ,MAAM,UAGR,6BAAMyK,EAAiBpL,IAEvB,yBAAK7D,UAAWzB,EAAQsJ,OACtB,yBACEnG,IAAG,UAAKd,GAAL,wBACHgB,MAAO,CAAE9E,MAAO,GAAI6E,OAAQ,MAE9B,0BAAMC,MAAO,CAAEvB,MAAO,UAAWxD,WAAY,KAA7C,eAGA,2BACE1B,KAAK,OACLsJ,SAAU,SAAAgL,GACRA,EAAEC,iBACFvL,EAAc,OAAQsL,EAAEE,OAAOC,MAAM,IACrCzL,EACE,WACA0L,IAAIC,gBAAgBL,EAAEE,OAAOC,MAAM,MAGvChL,KAAK,QACLmL,aAAW,QACX/P,UAAU,YACVgQ,UAAQ,EACRC,OAAO,UACP1Q,GAAG,QACHqC,MAAO,CAAE9D,QAAS,cAIxB,kBAACoS,GAAA,EAAD,KACE,kBAACjL,GAAA,EAAD,CAAQvE,QAAQ,YAAYL,MAAM,UAAUlF,KAAK,UAAjD,UAGA,kBAAC8J,GAAA,EAAD,CAAQhD,UAAWsD,KAAMpD,GAAG,SAAS9B,MAAM,UAAU8P,QAAM,GAA3D,YAuCQ1K,CAASnH,SC5HvBzC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,MACP6F,UAAW,KAEbkF,MAAO,CACLlF,UAAW,IAEbqM,KAAM,CACJlR,QAAS,QAIE,YAAAQ,GACb,IAAMC,EAAU1C,KACV+C,EAAWC,cACX8K,EAAe3G,aAAY,qBAAG2G,gBAEpC1G,qBAAU,WACR,IAAI1D,EAAKjB,EAAM8R,MAAMC,OAAO9Q,GAC5BX,ELc0B,SAAAW,GAC5B,8CAAO,WAAMX,GAAN,eAAA9F,EAAA,sEAEH8F,EA1CiC,CACrCzD,KZJ4B,mBY2CrB,SAGgBH,EAAW0O,IAAX,UAAkBlR,EAAlB,YAAwC+G,IAHxD,OAGCnF,EAHD,OAIHwE,EAAS2K,GAAuBnP,EAAOE,OAJpC,gDAMHO,MAAMhB,KAAKC,UAAL,OACN8E,EA3C+B,CACnCzD,KZN0B,iBYyCnB,yDAAP,mDAAM,GKfKyO,CAA4BrK,MACpC,IAEH,IA+EM0P,EAAmB,SAAApL,GACvB,OAAIA,EAAOqL,SACF,yBAAKxN,IAAKmC,EAAOqL,SAAUtN,MAAO,CAAED,OAAQ,OAC1CkC,EAAOR,MAEd,yBACE3B,IAAG,UAAKnJ,EAAL,mBAAwBsL,EAAOR,MAA/B,kBAA8CwJ,KAAKC,UACtDlL,MAAO,CAAED,OAAQ,YAJhB,GAUT,OACE,kBAACwI,GAAA,EAAD,CAAWnK,UAAWzB,EAAQvC,MAE5B,yBAAKgE,UAAU,WAAW4B,MAAO,CAAEe,UAAW,KAC5C,kBAAC,KAAD,CACE2N,oBAAkB,EAClB7M,cACEkG,EAAavP,OACTuP,EAAavP,OACb,CAAEwK,KAAM,UAAW4C,MAAO,EAAGwF,MAAO,GAE1CpJ,SAAU,SAACC,EAAD,GAA+B,EAApBE,cAAqB,IACpCsL,EAAW,IAAIC,SACnBD,EAASE,OAAO,KAAM1L,EAAOtE,IAC7B8P,EAASE,OAAO,OAAQ1L,EAAOe,MAC/ByK,EAASE,OAAO,QAAS1L,EAAO2D,OAChC6H,EAASE,OAAO,QAAS1L,EAAOmJ,OAC5BnJ,EAAO2L,MACTH,EAASE,OAAO,QAAS1L,EAAO2L,MAElC5Q,EL5GiB,SAACyQ,EAAUvP,GACtC,8CAAO,WAAMlB,GAAN,SAAA9F,EAAA,sEACCkC,EAAWuV,IAAI/X,EAAoB6W,GADpC,OAELvP,EAAQkG,SAFH,2CAAP,mDAAM,GK2Ga4D,CAA2ByF,EAAU/Q,EAAMwB,aAGrD,SAAAxB,GAAK,OAnHG,SAAC,GAA+B,IAA7BuF,EAA4B,EAA5BA,OAAQM,EAAoB,EAApBA,cAC1B,OACE,kBAAC,KAAD,KACE,kBAAChB,GAAA,EAAD,CAAMnD,UAAWzB,EAAQyQ,MACvB,kBAACzL,GAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC9C,QAAQ,MAAjC,gBAIA,kBAAC,KAAD,CACEV,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,OACLzJ,KAAK,OACLqJ,MAAM,SAER,6BACA,kBAAC,KAAD,CACExE,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,QACLzJ,KAAK,SACLqJ,MAAM,UAGR,kBAAC,KAAD,CACExE,UAAWzB,EAAQsJ,MACnBtD,WAAS,EACTtC,UAAWoC,KACXO,KAAK,QACLzJ,KAAK,SACLqJ,MAAM,UAGR,yBAAKxE,UAAWzB,EAAQsJ,OAAQoH,EAAiBpL,IAEjD,yBAAK7D,UAAWzB,EAAQsJ,OACtB,yBACEnG,IAAG,UAAKd,GAAL,wBACHgB,MAAO,CAAE9E,MAAO,GAAI6E,OAAQ,MAE9B,0BAAMC,MAAO,CAAEvB,MAAO,UAAWxD,WAAY,KAA7C,eAGA,2BACE1B,KAAK,OACLsJ,SAAU,SAAAgL,GACRA,EAAEC,iBACFvL,EAAc,OAAQsL,EAAEE,OAAOC,MAAM,IACrCzL,EACE,WACA0L,IAAIC,gBAAgBL,EAAEE,OAAOC,MAAM,MAGvChL,KAAK,QACLmL,aAAW,QACX/P,UAAU,YACVgQ,UAAQ,EACRC,OAAO,UACP1Q,GAAG,QACHqC,MAAO,CAAE9D,QAAS,cAIxB,kBAACoS,GAAA,EAAD,KACE,kBAACjL,GAAA,EAAD,CAAQvE,QAAQ,YAAYL,MAAM,UAAUlF,KAAK,UAAjD,QAGA,kBAAC8J,GAAA,EAAD,CAAQhD,UAAWsD,KAAMpD,GAAG,SAAS9B,MAAM,UAAU8P,QAAM,GAA3D,YA6CQ1K,CAASnH,S,yCCtJvBzC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACP6F,UAAW,IACXtB,gBAAiB,QACjBvD,QAAS,QAIE,cACb,IAAMS,EAAU1C,KADG,EAEe4C,mBAAS,OAFxB,mBAEZ+R,EAFY,KAEDC,EAFC,OAGehS,mBAAS,IAHxB,mBAGZiS,EAHY,KAGDC,EAHC,KAKbC,EAAe,WAEnB,IADA,IAAIC,EAAU,GACLtG,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BsG,EAAQ9Q,KAAK8M,KAAKiE,MAAM,MAAAjE,KAAKC,UAA8B,GAE7D,OAAO+D,GAGHvW,EAAO,CACXyW,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACExM,MAAO,eACPyM,MAAM,EACNC,YAAa,GACb7P,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,2BAEF8P,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB1X,KAAMoW,KAKNuB,EAAc,CAClBC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACbC,SAAU,SAASzO,EAAOyG,EAAO1G,GAC/B,OAAOC,EAAM0O,WAAWC,QAAQ,wBAAyB,WAYrE,OAJAxP,qBAAU,WACR0N,EAAaC,OACZ,IAGD,yBAAK5Q,UAAWzB,EAAQvC,MACtB,kBAACyE,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,kBAACgS,GAAA,EAAD,CACEC,KAAK,QACLtS,MAAM,UACNC,aAAW,uCAEX,kBAAC2E,GAAA,EAAD,CACEvE,QAAuB,SAAd8P,EAAuB,YAAc,WAC9C3Q,QAAS,kBAAM4Q,EAAa,UAF9B,QAMA,kBAACxL,GAAA,EAAD,CACEvE,QAAuB,QAAd8P,EAAsB,YAAc,WAC7C3Q,QAAS,kBAAM4Q,EAAa,SAF9B,OAMA,kBAACxL,GAAA,EAAD,CACEvE,QAAuB,QAAd8P,EAAsB,YAAc,WAC7C3Q,QAAS,kBAAM4Q,EAAa,SAF9B,QAOF,kBAACrQ,EAAA,EAAD,CACEE,aAAW,UACXT,QAAS,WACP8Q,EAAaC,OAGf,kBAAC,KAAD,OAEF,yBAAKhP,MAAO,CAAED,OAAQ,MACL,SAAd6O,GACC,kBAAC,KAAD,CAAMlW,KAAMA,EAAMwC,MAAM,OAAO6E,OAAQ,GAAIwM,QAAS8D,IAEvC,QAAdzB,GACC,kBAAC,KAAD,CAAKlW,KAAMA,EAAMwC,MAAM,OAAO6E,OAAQ,GAAIwM,QAAS8D,IAEtC,QAAdzB,GACC,kBAAC,KAAD,CAAKlW,KAAMA,EAAMwC,MAAM,OAAO6E,OAAQ,GAAIwM,QAAS8D,OCrHvDpW,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACP6F,UAAW,IAEbuD,KAAM,CACJ7F,MAAO,OAET8F,UAAW,CACT5I,UAAW,SACXoE,OAAQ,IACRyE,KAAM,EACNtJ,MAAO,OACPuJ,UAAW,KAEbC,cAAe,CACb3E,OAAQ,IACR0E,UAAW,KAEbE,iBAAkB,CAChB5E,OAAQ,KAEV6E,cAAe,CACb7E,OAAQ,QAIG,YAAArD,GACb,IAAMM,EAAWC,cACXN,EAAU1C,KAFM,EAGgB4C,mBAAS,MAHzB,mBAGf2N,EAHe,KAGFC,EAHE,OAIY5N,mBAAS,IAJrB,mBAIf0H,EAJe,KAIJyM,EAJI,KAMhBC,EAAqB7P,aACzB,qBAAG6P,sBAGL5P,qBAAU,WACRrE,GCxBK,SAAAA,GACL5D,EACG0O,IAAIlR,GACJiQ,MAAK,SAAArO,GACJwE,EAnByC,CAC/CzD,KpBciC,sBoBbjCD,QAiB4Cd,EAAOE,UAE9CwY,OAAM,SAAAlK,GACLjP,QAAQC,IAAIgP,GACZhK,EAdmC,CACzCzD,KpBMgC,+BmBwB7B,IAEH,IAAM4X,EAAqB,CACzB,CACEzP,MAAO,KACPuE,MAAO,MAGT,CACEvE,MAAO,OACPqJ,OAAQ,SAAApF,GAAI,OAAI,kBAAC,KAAD,CAAQ2F,OAAO,cAAc3F,EAAKyL,cAEpD,CACE1P,MAAO,OACPqJ,OAAQ,SAAApF,GAAI,OAAI,kBAAC,KAAD,CAAQ2F,OAAO,SAAS3F,EAAKyL,cAE/C,CACE1P,MAAO,QACPuE,MAAO,YAET,CACEvE,MAAO,QACPqJ,OAAQ,SAAApF,GAAI,OACV,kBAAC,KAAD,CACEzD,MAAOyD,EAAKV,MACZqE,YAAa,OACbE,mBAAmB,EACnBC,OAAQ,aAId,CACE/H,MAAO,OACPqJ,OAAQ,SAAApF,GAAI,OACV,kBAAC,KAAD,CACEzD,MAAOyD,EAAKT,KACZoE,YAAa,OACbE,mBAAmB,EACnBC,OAAQ,aAId,CACE/H,MAAO,OACPqJ,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,KAAa5G,KAAKoZ,MAAM1L,EAAKP,YAAYwE,OAAzC,UAGJ,CACElI,MAAO,MACPuE,MAAO,iBAILqL,EAAe,CACnB,CACE5P,MAAO,KACPuE,MAAO,aACP8E,OAAQ,SAAApF,GAAI,OAAI,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAAS6G,EAAKuD,cAEpD,CACExH,MAAO,QACPuE,MAAO,QACP+E,UAAW,CAAE9O,QAAS,GACtB6O,OAAQ,SAAApF,GAAI,OACV,yBACE7F,IAAG,UAAKnJ,EAAL,mBAAwBgP,EAAKlE,MAA7B,kBAA4CwJ,KAAKC,UACpDlL,MAAO,CAAE9E,MAAO,GAAI6E,OAAQ,GAAIoL,aAAc,UAIpD,CACEzJ,MAAO,OACPsJ,UAAW,CAAEX,SAAU,KACvBpE,MAAO,OACP8E,OAAQ,SAAApF,GAAI,OAAI,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAAS6G,EAAK3C,QAEpD,CACEtB,MAAO,QACPuE,MAAO,QACP8E,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAAC,KAAD,CACEoD,MAAOyD,EAAKC,MACZ0D,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnBD,OAAQ,cAKhB,CACE/H,MAAO,QACPuE,MAAO,QACP8E,OAAQ,SAAApF,GAAI,OACV,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAAC,KAAD,CACEoD,MAAOyD,EAAKyF,MACZ9B,YAAa,OACbE,mBAAmB,EACnBD,aAAc,EACdG,mBAAmB,EACnB2B,OAAQ,aAYlB,OACE,yBAAKjN,UAAWzB,EAAQvC,MACtB,kBAACoJ,GAAA,EAAD,CAAMC,WAAS,EAAC7H,QAAS,GACvB,kBAAC4H,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,GACb,kBAAC,KAAD,CACE9J,GAAG,aACH+D,MAAM,QACNoJ,QAASqG,EACTzY,KAAMuY,EAAmBzY,OAASyY,EAAmBzY,OAAS,GAC9D6T,WAAY,SAACC,EAAK5T,GAAN,OAdM,SAAAA,GAC1B+R,EAAe/R,GACfsY,EAAa/Y,KAAKoZ,MAAM3Y,EAAK0M,aAYMmM,CAAoB7Y,IAC/C6T,QAAS,CACPC,SAAU,GACVC,SAAU,SAAAd,GAAO,MAAK,CACpBlM,gBACE+K,GACAA,EAAYkC,UAAU/O,KAAOgO,EAAQe,UAAU/O,GAC3C,OACA,aAMd,kBAAC6F,GAAA,EAAD,CAAMmC,MAAI,EAAC8B,GAAI,GACb,kBAAC,KAAD,CACE/F,MAAM,aACNoJ,QAASwG,EACT5Y,KAAM6L,EACNgI,QAAS,CACPiF,QAAQ,EACRC,QAAQ,S,8BE1KhBxX,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEX0B,QAAQ,aACN1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAAS/B,EAAMyB,QAAQ,EAAG,IACvBzB,EAAMgC,OAAOJ,SAElBK,QAAS,CACPC,SAAU,EACVhC,QAAS,OACT4B,eAAgB,SAChBC,QAAS/B,EAAMyB,QAAQ,QAIrBzB,GAAQuX,aAAe,CAC3BzN,QAAS,CACPpD,QAAS,CAAE8Q,IAAK,YAElBvZ,OAAQ,CACNwZ,OAAQ,YCrCQzU,QACW,cAA7B0U,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2D,uBCXAwD,GAAe,CACnBxZ,OAAQ,KACRyZ,YAAY,EACZhP,SAAS,GCJL+O,GAAe,CACnBxZ,OAAQ,KACRyZ,YAAY,EACZhP,SAAS,GCFL+O,GAAe,CACnBxZ,OAAQ,KACRyZ,YAAY,EACZhP,SAAS,GCRL+O,GAAe,CACnBlL,YAAa,GACbV,YAAa,EACbiD,QAAS,EACThB,gBAAgB,EAChBsB,OAAQ,GCDJqI,GAAe,CACnBxZ,OAAQ,KACRyZ,YAAY,EACZhP,SAAS,GCHIiP,gBAAgB,CAC3B/Q,aLMW,WAA8C,IAA7CgR,EAA4C,uDAApCH,GAAoC,yCAApBzY,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAE5C,OAAQC,GACN,IvBhB0B,iBuBiBxB,OAAO,eAAK4Y,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAMhP,SAAS,IAC9D,IvBhByB,gBuBiBvB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAClE,IvBnBwB,euBoBtB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAClE,IvBnBkB,SuBoBhB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQ,GAAIyZ,YAAY,EAAOhP,SAAS,IAC7D,QACE,OAAOkP,IKjBTC,gBJIW,WAA8C,IAA7CD,EAA4C,uDAApCH,GAAoC,yCAApBzY,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC5C,OAAQC,GACN,IxBR6B,oBwBS3B,OAAO,eAAK4Y,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAMhP,SAAS,IAC9D,IxBT4B,mBwBU1B,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAClE,IxBV2B,kBwBWzB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAElE,QACE,OAAOkP,IIbTpK,aHIW,WAA8C,IAA7CoK,EAA4C,uDAApCH,GAAoC,yCAApBzY,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC5C,OAAQC,GACN,IzBJ0B,iByBKxB,OAAO,eAAK4Y,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAMhP,SAAS,IAC9D,IzBLyB,gByBMvB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAClE,IzBNwB,eyBOtB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAOhP,SAAS,IAC/D,IzBPuB,cyBQrB,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAOhP,SAAS,IAC/D,QACE,OAAOkP,IGdTpM,YFAW,WAA8C,IAA7CoM,EAA4C,uDAApCH,GAAoC,yCAApBzY,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC5C,OAAQC,GACN,I1BoB6B,oB0BnB3B,OAAO,eACF4Y,EADL,CAEErL,YAAaxN,EAAQmM,WACrBW,YAAa9M,EAAQoM,WACrB2D,QAAS/P,EAAQwM,SAErB,I1Bc+B,sB0Bb7B,OAAO,eACFqM,EADL,CAEE9J,eAAgB/O,EAAQyN,cACxB4C,OAAQrQ,EAAQ6M,QAEpB,QACE,OAAOgM,IEfTlB,mBDCW,WAA8C,IAA7CkB,EAA4C,uDAApCH,GAAoC,yCAApBzY,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC5C,OAAQC,GACN,I3BU+B,sB2BT7B,OAAO,eAAK4Y,EAAZ,CAAmB3Z,OAAQc,EAAS2Y,YAAY,EAAOhP,SAAS,IAClE,I3BS8B,qB2BR5B,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAOhP,SAAS,IAC/D,I3BKgC,uB2BJ9B,OAAO,eAAKkP,EAAZ,CAAmB3Z,OAAQ,KAAMyZ,YAAY,EAAMhP,SAAS,IAC9D,QACE,OAAOkP,M,qBETTE,GAAc,KAKhBA,GAAcC,aAAgBC,KAAOC,MAGvC,IAAMC,GAAQC,aAAYC,GAAUN,IAEpCO,IAAS7H,OACP,kBAAC,IAAD,CAAU0H,MAAOA,IACf,mBR6BW,SAAa/V,GAC1B,IAAMC,EAAU1C,KADiB,EAET2C,IAAMC,UAAS,GAFN,mBAE1BiB,EAF0B,KAEpB+U,EAFoB,KAG3B7V,EAAWC,cACjBmE,aAAY,qBAAGD,gBAEf,IASM2R,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAG1S,UAAyB2S,EAA5B,oCACnB,kBAAC,IAAD,iBACMA,EADN,CAEEjI,OAAQ,SAAArO,GAAK,OAEX4E,IACE,kBAACyR,EAAcrW,GAEf,kBAAC,IAAD,CAAU6D,GAAG,gBA4BrB,OARAc,qBAAU,WACRC,IAEI9J,aAAaC,QAAQb,IACvBoG,GAA8BN,EAAMwB,QnBxBjC,SAAAlB,GACLA,EAAS3D,EAAuB,UmByB/B,IAGD,kBAAC,KAAD,CAAQ4Z,SAAwD,IAC9D,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAe/Y,MAAOA,IACpB,yBAAKiE,UAAWzB,EAAQvC,MACtB,kBAAC+Y,GAAA,EAAD,MAEC7R,KACC,kBAAC,GAAD,CAAQ3C,iBArDK,WACvBkU,GAAQ,IAoD8C/U,KAAMA,IAGnDwD,KACC,kBAAC,GAAD,CAAMzB,kBArDQ,WACxBgT,GAAQ,IAoD8C/U,KAAMA,IAGpD,kBAACyK,GAAA,EAAD,CAAWnK,UAAWzB,EAAQP,QAAS0E,UAAU,GAC/C,mBAtCO,SAAC,GAAD,EAAGT,UAAH,IAA4B2S,EAA5B,oCACjB,kBAAC,IAAD,iBACMA,EADN,CAEEjI,OAAQ,SAAArO,GAAK,OAEX4E,IACE,kBAAC,IAAD,CAAUf,GAAG,WAEb,kBAAC6S,GAAc1W,SA8BX,CAAY2W,KAAK,SAAShT,UAAW+S,KACrC,kBAAC,IAAD,CAAOC,KAAK,YAAYhT,UAAWiT,KACnC,kBAACR,EAAD,CAAcO,KAAK,QAAQhT,UAAWkT,KACtC,kBAACT,EAAD,CAAcU,OAAO,EAAMH,KAAK,SAAShT,UAAWoT,KACpD,kBAACX,EAAD,CAAcO,KAAK,gBAAgBhT,UAAWqT,KAC9C,kBAACZ,EAAD,CAAcO,KAAK,kBAAkBhT,UAAWsT,KAChD,kBAACb,EAAD,CAAcO,KAAK,UAAUhT,UAAWuT,KACxC,kBAACd,EAAD,CAAcO,KAAK,eAAehT,UAAWwT,KAC7C,kBAAC,IAAD,CACEL,OAAO,EACPH,KAAK,IACLhT,UAAW,kBAAM,kBAAC,IAAD,CAAUE,GAAG,qBQ3G1C,OAEFuT,SAASC,eAAe,SPyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrN,MAAK,SAAAsN,GACjCA,EAAaC,kB","file":"static/js/main.634f68b4.chunk.js","sourcesContent":["export const LOGIN_FETCHING = \"LOGIN_FETCHING\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\n// Register Page\nexport const REGISTER_FETCHING = \"REGISTER_FETCHING\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\n\n// Stock Page\nexport const STOCK_FETCHING = \"STOCK_FETCHING\";\nexport const STOCK_SUCCESS = \"STOCK_SUCCESS\";\nexport const STOCK_FAILED = \"STOCK_FAILED\";\nexport const STOCK_CLEAR = \"STOCK_CLEAR\";\n\n// Stock Edit Page\nexport const STOCK_EDIT_FETCHING = \"STOCK_EDIT_FETCHING\";\nexport const STOCK_EDIT_SUCCESS = \"STOCK_EDIT_SUCCESS\";\nexport const STOCK_EDIT_FAILED = \"STOCK_EDIT_FAILED\";\nexport const STOCK_EDIT_INITIALED = \"STOCK_EDIT_INITIALED\";\n\n// Transaction Edit Page\nexport const TRANSACTION_FETCHING = \"TRANSACTION_FETCHING\";\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\nexport const TRANSACTION_FAILED = \"TRANSACTION_FAILED\";\n\n// Shop Page\nexport const SHOP_FETCHING = \"SHOP_FETCHING\";\nexport const SHOP_SUCCESS = \"SHOP_SUCCESS\";\nexport const SHOP_FAILED = \"SHOP_FAILED\";\n\nexport const SHOP_UPDATE_ORDER = \"SHOP_UPDATE_ORDER\";\nexport const SHOP_UPDATE_PAYMENT = \"SHOP_UPDATE_PAYMENT\";\n\n// Error Code\nexport const E_PICKER_CANCELLED = \"E_PICKER_CANCELLED\";\nexport const E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR =\n  \"E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR\";\nexport const E_PERMISSION_MISSING = \"E_PERMISSION_MISSING\";\nexport const E_PICKER_NO_CAMERA_PERMISSION = \"E_PICKER_NO_CAMERA_PERMISSION\";\nexport const E_USER_CANCELLED = \"E_USER_CANCELLED\";\nexport const E_UNKNOWN = \"E_UNKNOWN\";\nexport const E_DEVELOPER_ERROR = \"E_DEVELOPER_ERROR\";\nexport const TIMEOUT_NETWORK = \"ECONNABORTED\"; // request service timeout\nexport const NOT_CONNECT_NETWORK = \"NOT_CONNECT_NETWORK\";\n\n//////////////// Localization Begin ////////////////\nexport const NETWORK_CONNECTION_MESSAGE =\n  \"Cannot connect to server, Please try again.\";\nexport const NETWORK_TIMEOUT_MESSAGE =\n  \"A network timeout has occurred, Please try again.\";\nexport const UPLOAD_PHOTO_FAIL_MESSAGE =\n  \"An error has occurred. The photo was unable to upload.\";\n\nexport const apiUrl = \"http://localhost:8081/api/v2\";\nexport const imageUrl = \"http://localhost:8081\";\n\nexport const server = {\n  LOGIN_URL: `login`,\n  REFRESH_TOKEN_URL: `refresh/token`,\n  REGISTER_URL: `register`,\n  PRODUCT_URL: `product`,\n  TRANSACTION_URL: `transaction`,\n  REPORT_URL: `report`,\n  TOKEN_KEY: `token`,\n  REFRESH_TOKEN_KEY: `refresh_token`\n};\n","import axios from \"axios\";\nimport join from \"url-join\";\nimport {\n  server,\n  apiUrl,\n  NOT_CONNECT_NETWORK,\n  NETWORK_CONNECTION_MESSAGE\n} from \"../constants\";\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\n\naxios.interceptors.request.use(async config => {\n  if (!isAbsoluteURLRegex.test(config.url)) {\n    config.url = join(apiUrl, config.url);\n  }\n\n  const userToken = localStorage.getItem(server.TOKEN_KEY);\n  if (userToken) {\n    config.headers = {  Authorization: `Bearer ${userToken}` };\n    \n  }\n  config.timeout = 10000; // 10 Second\n  return config;\n});\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  async error => {\n    console.log(JSON.stringify(error, undefined, 2));\n    if (error.response.status == \"401\") {\n      const refreshToken = localStorage.getItem(server.REFRESH_TOKEN_KEY);\n      const refreshUrl = `${apiUrl}/${server.REFRESH_TOKEN_URL}`;\n      let result = await axios.post(refreshUrl, { refreshToken });\n\n      const token = result.data.jwt;\n      localStorage.setItem(server.TOKEN_KEY, token);\n      return axios.request(error.config);\n    } else if (error.response.status == \"403\") {\n      // force logout\n      localStorage.removeItem(server.TOKEN_KEY);\n      localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    }\n\n    if (axios.isCancel(error)) {\n      return Promise.reject(error);\n    } else if (!error.response) {\n      alert(JSON.stringify(error));\n      return Promise.reject({\n        code: NOT_CONNECT_NETWORK,\n        message: NETWORK_CONNECTION_MESSAGE\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const httpClient = axios;\n","import {\n  LOGIN_FETCHING,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT,\n  server\n} from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\nimport jwt from \"jsonwebtoken\";\n\n// Forward to reducer\nexport const setLoginStateToFetch = () => ({\n  type: LOGIN_FETCHING\n});\n\nexport const setLoginStateToSuccess = payload => ({\n  type: LOGIN_SUCCESS,\n  payload\n});\n\nexport const setLoginStateToFailed = payload => ({\n  type: LOGIN_FAILED,\n  payload\n});\n\nexport const setLoginStateToLogout = () => ({\n  type: LOGOUT\n});\n\n// Called by Login Component\nexport const login = (value, history) => {\n  return async dispatch => {\n    try {\n      dispatch(setLoginStateToFetch()); // fetching\n      let result = await httpClient.post(server.LOGIN_URL, value);\n      if (result.data.result === \"ok\") {\n        const { token, refreshToken } = result.data;\n        localStorage.setItem(server.TOKEN_KEY, token);\n        localStorage.setItem(server.REFRESH_TOKEN_KEY, refreshToken);\n        dispatch(setLoginStateToSuccess(result));\n        history.push(\"/stock\");\n      } else {\n        dispatch(setLoginStateToFailed(result));\n      }\n    } catch (error) {\n      dispatch(setLoginStateToFailed({ data: { message: error } }));\n    }\n  };\n};\n\nexport const logout = history => {\n  return dispatch => {\n    localStorage.removeItem(server.TOKEN_KEY);\n    localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    dispatch(setLoginStateToLogout());\n    history.push(\"/login\");\n  };\n};\n\nexport const isLoggedIn = () => {\n  let token = localStorage.getItem(server.TOKEN_KEY);\n  if (token) {\n    var decodedToken = jwt.decode(token, { complete: true });\n    var dateNow = new Date();\n\n    if (decodedToken.exp < dateNow.getTime()) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nexport const reLogin = () => {\n  return dispatch => {\n    dispatch(setLoginStateToSuccess({}));\n  };\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as loginActions from \"./../../actions/login.action\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch } from \"react-redux\";\n\nimport { withRouter } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n  const isMenuOpen = Boolean(anchorEl);\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n    dispatch(loginActions.logout(props.history));\n    handleMenuClose();\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: props.open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: props.open && classes.hide,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            React / NodeJS / Express / MongoDB Workshop\n            <Typography variant=\"body1\">\n              {\" \"}\n              By CodeMobiles {process.env.REACT_APP_VERSION}\n            </Typography>\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShopIcon from \"@material-ui/icons/Shop\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7),\n  },\n  bannerOpen: {\n    backgroundImage: \"url(\" + \"/images/background_menu.jpg\" + \")\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#1E88E5\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  isActive: {\n    backgroundColor: \"#e0f5fd\",\n    color: \"#0080ff\",\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: props.open,\n        [classes.drawerClose]: !props.open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: props.open,\n          [classes.bannerOpen]: props.open,\n          [classes.drawerClose]: !props.open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={props.handleDrawerClose}>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/logo_white.png`}\n            height=\"30\"\n          />\n          <ChevronLeftIcon style={{ color: \"white\" }} />\n        </IconButton>\n      </div>\n      {props.open && <img height={250} src=\"/images/menu_banner.jpg\" alt=\"\" />}\n      <Divider />\n\n      <List>\n        {/* Shop */}\n        <ListItem\n          component={NavLink}\n          to=\"/shop\"\n          button\n          key=\"shop\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <ShopIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Shop\" />\n        </ListItem>\n\n        {/* Stock */}\n        <ListItem\n          component={NavLink}\n          to=\"/stock\"\n          button\n          key=\"stock\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <LayersIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Stock\" />\n        </ListItem>\n\n        {/* Report */}\n        <ListItem\n          component={NavLink}\n          to=\"/report\"\n          button\n          key=\"report\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Report\" />\n        </ListItem>\n\n        {/* Transaction */}\n        <ListItem\n          component={NavLink}\n          to=\"/transaction\"\n          button\n          key=\"transaction\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Transaction\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as loginActions from \"./../../../actions/login.action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    marginTop: 80\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n  useEffect(() => {\n    loginActions.isLoggedIn() && props.history.push(\"/stock\");\n  }, []);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        {loginReducer.isError && (\n          <Alert severity=\"error\" style={{ marginBottom: 8 }}>\n            Invalid account!\n          </Alert>\n        )}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        {isSubmitting && <CircularProgress style={{ marginTop: 10 }} />}\n        <Grid container justify=\"flex-end\">\n          <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n            Don't have an account? Register\n          </Link>\n        </Grid>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"200\"\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            dispatch(loginActions.login(values, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  REGISTER_FETCHING,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n  server\n} from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\n\nexport const setRegisterStateToFetch = () => ({\n  type: REGISTER_FETCHING\n});\n\nexport const setRegisterStateToSuccess = payload => ({\n  type: REGISTER_SUCCESS,\n  payload\n});\n\nexport const setRegisterStateToFailed = payload => ({\n  type: REGISTER_FAILED,\n  payload: payload\n});\n\n// Called by Register Component\nexport const register = (value, history) => {\n  return async dispatch => {\n    try {\n      dispatch(setRegisterStateToFetch()); // fetching\n      let result = await httpClient.post(server.REGISTER_URL, value);\n      if (result.data.result === \"ok\") {\n        dispatch(setRegisterStateToSuccess(result));\n        history.goBack();\n      } else {\n        dispatch(setRegisterStateToFailed(result));\n      }\n    } catch (error) {\n      dispatch(setRegisterStateToFailed({ data: { message: error } }));\n    }\n  };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport * as registerActions from \"./../../../actions/register.action\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSubmitting}\n        >\n          Create\n        </Button>\n        <Button\n          onClick={() => props.history.goBack()}\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.cancel}\n        >\n          Cancel\n        </Button>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            dispatch(registerActions.register(values, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55\n  },\n  star: {\n    color: \"red\"\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100\n  },\n  productContainer: {\n    height: 720\n  },\n  paymentButton: {\n    height: 95,\n    marginTop: 24\n  },\n  leftLabel: {\n    marginLeft: 20\n  },\n  rightLabel: {\n    marginRight: 20\n  }\n}));\n","export class TransactionRequest {\n    subtotal = 0;            \n    total = 0;\n    paid = 0;\n    change = 0;\n    order_list = \"x\";\n    payment_type = \"x\";\n    payment_detail = \"x\";\n    staff_id = \"x\";        \n}","import { httpClient } from \"./../utils/HttpClient\";\n\nimport { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT, server } from \"../constants\";\n\nconst setStateShoptoUpdateOrder = payload => ({\n  type: SHOP_UPDATE_ORDER,\n  payload: payload\n});\n\nconst doUpdateOrder = (dispatch, orderLines) => {\n  let totalPrice = 0;\n  let taxAmt = 0;\n  for (let item of orderLines) {\n    totalPrice += item.price * item.qty;\n  }\n  taxAmt = totalPrice * 0.07;\n\n  dispatch(\n    setStateShoptoUpdateOrder({\n      orderLines,\n      totalPrice,\n      taxAmt\n    })\n  );\n};\n\nexport const addOrder = item => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    let index = orderLines.indexOf(item);\n    if (index === -1) {\n      item.qty = 1;\n      orderLines.unshift(item);\n    } else {\n      orderLines[index].qty++;\n    }\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const removeOrder = product => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    var foundIndex = orderLines.indexOf(product);\n\n    orderLines.map(item => {\n      if (item.product_id === product.product_id) {\n        item.qty = 1;\n      }\n    });\n    orderLines.splice(foundIndex, 1);\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const submitPayment = data => {\n  return (dispatch, getState) => {\n    httpClient.post(server.TRANSACTION_URL, data).then(() => {\n      // Clear payment\n      getState().shopReducer.mOrderLines = [];\n      dispatch({\n        type: SHOP_UPDATE_PAYMENT,\n        payload: {\n          isPaymentMade: false,\n          given: 0\n        }\n      });\n    });\n  };\n};\n\nexport const togglePaymentState = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SHOP_UPDATE_PAYMENT,\n      payload: {\n        isPaymentMade: !getState().shopReducer.mIsPaymentMade,\n        given: !getState().shopReducer.mGiven\n      }\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TransactionRequest } from \"./../../../models/transaction\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const dispatch = useDispatch();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      padding: 30\n    },\n    button: {\n      height: 100,\n      fontSize: 20\n    },\n    field: {\n      marginTop: 16\n    }\n  }));\n\n  const classes = useStyles();\n\n  const isMustChanged = values => {\n    try {\n      return values.given > shopReducer.mTotalPrice;\n    } catch (err) {\n      return false;\n    }\n  };\n\n  const updateChange = (given, setFieldValue) => {\n    let change = given - shopReducer.mTotalPrice;\n    if (change > 0) {\n      setFieldValue(\"change\", change);\n    } else {\n      setFieldValue(\"change\", 0);\n    }\n  };\n\n  const onClickGiven = (newValue, oldValue, setFieldValue) => {\n    const newGiven = newValue + oldValue;\n    setFieldValue(\"given\", newGiven);\n    updateChange(newGiven, setFieldValue);\n  };\n\n  const onClickExact = setFieldValue => {\n    setFieldValue(\"given\", shopReducer.mTotalPrice);\n    updateChange(0, setFieldValue);\n  };\n\n  const onClickSubmit = values => {\n    let trans = new TransactionRequest();\n    trans.total = shopReducer.mTotalPrice;\n    trans.paid = values.given;\n    trans.change = values.change;\n    trans.payment_type = \"cash\";\n    trans.payment_detail = \"full\";        \n    trans.order_list = props.order;\n    dispatch(shopActions.submitPayment(trans));\n  };\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        {isMustChanged(values) && (\n          <Field\n            variant=\"outlined\"\n            className={classes.field}\n            fullWidth\n            InputLabelProps={{\n              shrink: true\n            }}\n            component={TextField}\n            name=\"change\"\n            type=\"text\"\n            label=\"Change\"\n            InputProps={{\n              style: { fontSize: 35 },\n              readOnly: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">THB</InputAdornment>\n              )\n            }}\n          />\n        )}\n\n        <Field\n          readonly\n          variant=\"outlined\"\n          className={classes.field}\n          fullWidth\n          component={TextField}\n          name=\"given\"\n          type=\"text\"\n          label=\"Given\"\n          InputProps={{\n            style: { fontSize: 35, color: \"green\" },\n            readOnly: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">THB</InputAdornment>\n            )\n          }}\n        />\n\n        <div style={{ marginTop: 32 }}>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(1000, values.given, setFieldValue)}\n              >\n                ฿1,000\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(500, values.given, setFieldValue)}\n              >\n                ฿500\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(100, values.given, setFieldValue)}\n              >\n                ฿100\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(50, values.given, setFieldValue)}\n              >\n                ฿50\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(20, values.given, setFieldValue)}\n              >\n                ฿20\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(10, values.given, setFieldValue)}\n              >\n                ฿10\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"danger\"\n                onClick={() => setFieldValue(\"given\", 0)}\n              >\n                CLR\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickExact(setFieldValue)}\n              >\n                EXACT\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => onClickSubmit(values)}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Form>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik initialValues={{ given: 0 }}>{props => showForm(props)}</Formik>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\nimport {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  server,\n  STOCK_CLEAR\n} from \"../constants\";\n\nexport const setStateStockToSuccess = payload => ({\n  type: STOCK_SUCCESS,\n  payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: STOCK_FAILED\n});\n\nconst setStateStockToClear = () => ({\n  type: STOCK_CLEAR\n});\n\nexport const clearProduct = () => {\n  return dispatch => {\n    dispatch(setStateStockToClear());\n  };\n};\n\nexport const getProducts = () => {\n  return dispatch => {\n    dispatch(setStateStockToFetching());\n    doGetProducts(dispatch);\n  };\n};\n\nexport const addProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.post(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const updateProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.put(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const getProductById = id => {\n  return async dispatch => {\n    try {\n      dispatch(setStateStockToFetching());\n      let result = await httpClient.get(`${server.PRODUCT_URL}/${id}`);\n      dispatch(setStateStockToSuccess(result.data));\n    } catch (error) {\n      alert(JSON.stringify(error));\n      dispatch(setStateStockToFailed());\n    }\n  };\n};\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/${id}`);\n    await doGetProducts(dispatch);\n  };\n};\n\nexport const getProductByKeyword = event => {\n  return async dispatch => {\n    var keyword = event.target.value;\n    dispatch(setStateStockToFetching());\n\n    if (keyword !== null && keyword !== \"\") {\n      let result = await httpClient.get(\n        `${server.PRODUCT_URL}/name/${keyword}`\n      );\n      dispatch(setStateStockToSuccess(result.data));\n    } else {\n      doGetProducts(dispatch);\n    }\n  };\n};\n\nconst doGetProducts = async dispatch => {\n  try {\n    let result = await httpClient.get(server.PRODUCT_URL);\n    dispatch(setStateStockToSuccess(result.data));\n  } catch (err) {\n    // alert(JSON.stringify(err));\n    dispatch(setStateStockToFailed());\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport Payment from \"./../../fragments/Payment/Payment\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { imageUrl } from \"./../../../constants\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const renderPayment = () => {\n    return (\n      <div className=\"col-md-8\" style={{ maxHeight: 710 }}>\n        <Payment order={JSON.stringify(shopReducer.mOrderLines)} />\n      </div>\n    );\n  };\n\n  const isSelectedItem = product => {\n    let index = shopReducer.mOrderLines.indexOf(product);\n    return index !== -1;\n  };\n\n  const renderOrderRows = () => {\n    const { mOrderLines } = shopReducer;\n\n    return mOrderLines.map(item => (\n      <ListItem button divider className={classes.orderListItem}>\n        <Grid container key={item.product_id} spacing={1}>\n          {/* Image Order  */}\n          <Grid item xs={2}>\n            <img\n              alt=\"to be done\"\n              src={`${imageUrl}/images/${item.image}`}\n              style={{ width: 90 }}\n            />\n          </Grid>\n          {/* Name Order  */}\n          <Grid item xs={8} alignitem=\"center\">\n            <Typography\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ maxHeight: 50, marginLeft: 32 }}\n            >\n              {item.name}\n            </Typography>\n          </Grid>\n          {/* Price and Qty Order  */}\n          <Grid item xs={2} alignContent=\"center\">\n            <Typography align=\"right\" color=\"textPrimary\">\n              <NumberFormat\n                value={item.price}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                decimalScale={2}\n                fixedDecimalScale={true}\n                prefix={\"฿\"}\n              />\n              <br />X {item.qty}.\n              <br />\n              <DeleteOutlineIcon\n                onClick={() => dispatch(shopActions.removeOrder(item))}\n              />\n            </Typography>\n          </Grid>\n        </Grid>\n      </ListItem>\n    ));\n  };\n\n  const renderProductRows = () => {\n    const { result } = stockReducer;\n    return (\n      <Container style={{ height: \"100%\", overflowY: \"scroll\" }}>\n        <Grid container spacing={1} className={classes.productContainer}>\n          {result !== null &&\n            result.map((item, i) => (\n              <Grid\n                key={i}\n                item\n                xs={3}\n                onClick={() => dispatch(shopActions.addOrder(item))}\n                style={{ cursor: \"pointer\" }}\n              >\n                <Card>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Contemplative Reptile\"\n                      height=\"200\"\n                      image={`${imageUrl}/images/${item.image}`}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography noWrap gutterBottom>\n                        {item.name}\n                      </Typography>\n                      <Grid\n                        container\n                        style={{\n                          height: 24,\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          alignitem: \"center\"\n                        }}\n                      >\n                        <div style={{ flexGrow: 1 }}>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            D{item.product_id} / ฿{item.price}\n                          </Typography>\n                        </div>\n                        {isSelectedItem(item) && (\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"row\" }}\n                          >\n                            <Typography\n                              style={{ marginRight: 4 }}\n                              variant=\"body1\"\n                              color=\"textPrimary\"\n                            >\n                              X{item.qty}\n                            </Typography>\n\n                            <StarsIcon className={classes.star} />\n                          </div>\n                        )}\n                      </Grid>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Container>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* Left section */}\n        <Grid item xs={8}>\n          <Paper\n            elevation={1}\n            style={{\n              paddingTop: 24,\n              paddingBottom: 24,\n              backgroundColor: \"#e0f5fd\"\n            }}\n          >\n            {shopReducer.mIsPaymentMade ? renderPayment() : renderProductRows()}\n          </Paper>\n        </Grid>\n\n        {/* Right section */}\n        <Grid item xs={4}>\n          <div\n            style={{\n              maxWidth: \"100%\"\n            }}\n          >\n            <Paper style={{ paddingTop: 16, marginTop: 8 }} elevation={1}>\n              {/* Tax section */}\n              <Grid\n                container\n                justify=\"space-between\"\n                style={{ marginBottom: 24 }}\n              >\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Tax 7%\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTaxAmt}\n                    displayType={\"text\"}\n                    decimalScale={2}\n                    thousandSeparator={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {/* Total section */}\n              <Grid container justify=\"space-between\">\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Total\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTotalPrice}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {shopReducer.mTotalPrice > 0 && !shopReducer.mIsPaymentMade && (\n                <Button\n                  className={classes.paymentButton}\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => dispatch(shopActions.togglePaymentState())}\n                >\n                  <Typography variant=\"h4\">Payment</Typography>\n                </Button>\n              )}\n            </Paper>\n\n            <Paper\n              elevation={1}\n              style={{\n                height: 490,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {shopReducer.mOrderLines.length > 0 ? (\n                <List\n                  component=\"nav\"\n                  className={classes.orderList}\n                  aria-label=\"mailbox folders\"\n                >\n                  {renderOrderRows()}\n                </List>\n              ) : (\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/waiting_for_sale.png`}\n                  style={{ height: 300, width: 300 }}\n                />\n              )}\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst StockCard = props => {\n  return (\n    <Card>\n      <Grid container style={{ minHeight: 70 }}>\n        <Grid item style={{ flexGrow: 1, padding: 24 }}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {props.subtitle}\n          </Typography>\n        </Grid>\n\n        <Grid\n          item\n          style={{\n            backgroundColor: props.color,\n            color: \"white\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            minWidth: 70\n          }}\n        >\n          {React.createElement(props.icon, { fontSize: \"large\" })}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport StockCard from \"./../../fragments/StockCard/StockCard\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport AssignmentReturnIcon from \"@material-ui/icons/AssignmentReturn\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 60\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  const columns = [\n    {\n      title: \"ID\",\n      field: \"id\",\n      render: item => <Typography variant=\"body1\">{item.id}</Typography>\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: item => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{height: 70, borderRadius: \"5%\" }}\n        />\n      )\n    },\n    {\n      title: \"NAME\",\n      field: \"name\",\n      cellStyle: { minWidth: 700 },\n      render: item => <Typography variant=\"body1\">{item.name}</Typography>\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"CREATED\",\n      field: \"created\",\n      render: item => (\n        <Typography>\n          <Moment format=\"DD/MM/YYYY\">{item.created}</Moment>\n        </Typography>\n      )\n    }\n  ];\n\n  const actions = [\n    {\n      icon: \"edit\",\n      iconProps: { color: \"primary\" },\n      tooltip: \"Edit\",\n      onClick: (event, rowData) =>\n        props.history.push(\"/stock/edit/\" + rowData.id)\n    },\n    {\n      icon: \"delete\",\n      iconProps: { color: \"action\" },\n      tooltip: \"Delete\",\n      onClick: (event, rowData) => {\n        setSelectedProduct(rowData);\n        setOpenDialog(true);\n      }\n    }\n  ];\n\n  const handleDeleteConfirm = () => {\n    dispatch(stockActions.deleteProduct(selectedProduct.id));\n    dispatch(stockActions.getProducts());\n    setOpenDialog(false);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const showDialog = () => {\n    if (selectedProduct === null) {\n      return \"\";\n    }\n\n    return (\n      <Dialog\n        open={openDialog}\n        keepMounted\n        onClose={() => {}}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          <img\n            src={`${imageUrl}/images/${\n              selectedProduct.image\n            }?dummy=${Math.random()}`}\n            style={{ width: 100, borderRadius: \"5%\" }}\n          />\n          <br />\n          Confirm to delete the product? : {\" \" + selectedProduct.name}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            You cannot restore deleted product.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteConfirm} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Summary Icons */}\n      <Grid container style={{ marginBottom: 16 }} spacing={7}>\n        <Grid item lg={3} md={6}>\n          <StockCard\n            icon={AddShoppingCartIcon}\n            title=\"TOTAL\"\n            subtitle=\"112 THB\"\n            color=\"#00a65a\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6}>\n          <StockCard\n            icon={NewReleasesIcon}\n            title=\"EMPTY\"\n            subtitle=\"9 PCS.\"\n            color=\"#f39c12\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6}>\n          <StockCard\n            icon={AssignmentReturnIcon}\n            title=\"RETURN\"\n            subtitle=\"1 PCS.\"\n            color=\"#dd4b39\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6}>\n          <StockCard\n            icon={StarIcon}\n            title=\"DISCOUNT\"\n            subtitle=\"5 PCS.\"\n            color=\"#00c0ef\"\n          />\n        </Grid>\n      </Grid>\n\n      <MaterialTable\n        id=\"root_stock\"\n        title=\"Stock\"\n        columns={columns}\n        actions={actions}\n        data={stockReducer.result ? stockReducer.result : []}\n        onRowClick={(evt, selectedRow) => setSelectedRow(selectedRow)}\n        options={{\n          pageSize: 5,\n          rowStyle: rowData => ({\n            backgroundColor:\n              selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                ? \"#EEE\"\n                : \"#FFF\"\n          })\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <div style={{ padding: \"0px 10px\" }}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component={Link}\n                  to=\"/stock/create\"\n                >\n                  Create\n                </Button>\n              </div>\n            </div>\n          )\n        }}\n      />\n\n      {showDialog()}\n    </div>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Create Stock\n            </Typography>\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          validate={values => {\n            let errors = {};\n            if (!values.name) errors.name = \"Enter name\";\n            if (!values.stock) errors.stock = \"Enter stock\";\n            if (!values.price) errors.price = \"Enter price\";\n            return errors;\n          }}\n          initialValues={{ name: \"\", stock: 10, price: 90 }}\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            formData.append(\"image\", values.file);\n            dispatch(stockActions.addProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n\n  useEffect(() => {\n    let id = props.match.params.id;\n    dispatch(stockActions.getProductById(id));\n  }, []);\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Edit Product\n            </Typography>\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div className={classes.field}>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Edit\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    } else if (values.image) {\n      return (\n        <img\n          src={`${imageUrl}/images/${values.image}?dummy=${Math.random()}`}\n          style={{ height: 100 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          enableReinitialize\n          initialValues={\n            stockReducer.result\n              ? stockReducer.result\n              : { name: \"loading\", price: 0, stock: 0 }\n          }\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"id\", values.id);\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            if (values.file) {\n              formData.append(\"image\", values.file);\n            }\n            dispatch(stockActions.updateProduct(formData, props.history));\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, ButtonGroup, IconButton } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 100,\n    backgroundColor: \"white\",\n    padding: 24\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [chartType, setChartType] = useState(\"bar\");\n  const [chartData, setChartData] = useState([]);\n\n  const getRandomInt = () => {\n    let randoms = [];\n    for (let index = 0; index < 8; index++) {\n      randoms.push(Math.floor(Math.random() * (50000 - 5 + 1)) + 5);\n    }\n    return randoms;\n  };\n\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Revenue 2018\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\"\n        ],\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      }\n    ]\n  };\n\n  const chartOption = {\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function(value, index, values) {\n              return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  useEffect(() => {\n    setChartData(getRandomInt());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Sale Chart</Typography>\n      <ButtonGroup\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"large outlined primary button group\"\n      >\n        <Button\n          variant={chartType === \"line\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"line\")}\n        >\n          Line\n        </Button>\n        <Button\n          variant={chartType === \"bar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"bar\")}\n        >\n          Bar\n        </Button>\n        <Button\n          variant={chartType === \"pie\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"pie\")}\n        >\n          Pie\n        </Button>\n      </ButtonGroup>\n      <IconButton\n        aria-label=\"refresh\"\n        onClick={() => {\n          setChartData(getRandomInt());\n        }}\n      >\n        <RefreshIcon />\n      </IconButton>\n      <div style={{ height: 500 }}>\n        {chartType === \"line\" && (\n          <Line data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"pie\" && (\n          <Pie data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"bar\" && (\n          <Bar data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as transactionActions from \"./../../../actions/transaction.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { imageUrl } from \"./../../../constants\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55\n  },\n  star: {\n    color: \"red\"\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100\n  },\n  productContainer: {\n    height: 720\n  },\n  paymentButton: {\n    height: 95\n  }\n}));\n\nexport default props => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [orderList, setorderList] = useState([]);\n\n  const transactionReducer = useSelector(\n    ({ transactionReducer }) => transactionReducer\n  );\n\n  useEffect(() => {\n    dispatch(transactionActions.getTransactions());\n  }, []);\n\n  const transactionColumns = [\n    {\n      title: \"ID\",\n      field: \"id\"\n    },\n\n    {\n      title: \"DATE\",\n      render: item => <Moment format=\"YYYY/MM/DD\">{item.created_at}</Moment>\n    },\n    {\n      title: \"TIME\",\n      render: item => <Moment format=\"HH:mm\">{item.created_at}</Moment>\n    },\n    {\n      title: \"STAFF\",\n      field: \"staff_id\"\n    },\n    {\n      title: \"TOTAL\",\n      render: item => (\n        <NumberFormat\n          value={item.total}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      )\n    },\n    {\n      title: \"PAID\",\n      render: item => (\n        <NumberFormat\n          value={item.paid}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      )\n    },\n    {\n      title: \"#SKU\",\n      render: item => (\n        <Typography>{JSON.parse(item.order_list).length} SKU</Typography>\n      )\n    },\n    {\n      title: \"WAY\",\n      field: \"payment_type\"\n    }\n  ];\n\n  const orderColumns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: item => <Typography variant=\"body1\">{item.product_id}</Typography>\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: item => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 80, height: 80, borderRadius: \"5%\" }}\n        />\n      )\n    },\n    {\n      title: \"NAME\",\n      cellStyle: { minWidth: 400 },\n      field: \"name\",\n      render: item => <Typography variant=\"body1\">{item.name}</Typography>\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      )\n    }\n  ];\n\n  const clickTransactionRow = data => {\n    setSelectedRow(data);\n    setorderList(JSON.parse(data.order_list));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={7}>\n        <Grid item xs={6}>\n          <MaterialTable\n            id=\"root_stock\"\n            title=\"Stock\"\n            columns={transactionColumns}\n            data={transactionReducer.result ? transactionReducer.result : []}\n            onRowClick={(evt, data) => clickTransactionRow(data)}\n            options={{\n              pageSize: 10,\n              rowStyle: rowData => ({\n                backgroundColor:\n                  selectedRow &&\n                  selectedRow.tableData.id === rowData.tableData.id\n                    ? \"#EEE\"\n                    : \"#FFF\"\n              })\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <MaterialTable\n            title=\"Order List\"\n            columns={orderColumns}\n            data={orderList}\n            options={{\n              search: false,\n              paging: false\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\n\nimport {\n  TRANSACTION_SUCCESS,\n  TRANSACTION_FETCHING,\n  TRANSACTION_FAILED,\n  server\n} from \"./../constants\";\n\nconst setStateTransactionToSuccess = payload => ({\n  type: TRANSACTION_SUCCESS,\n  payload: payload\n});\n\nconst setStateTransactionToFetching = () => ({\n  type: TRANSACTION_FETCHING\n});\n\nconst setStateTransactionToFailed = () => ({\n  type: TRANSACTION_FAILED\n});\n\nexport const getTransactions = () => {\n  setStateTransactionToFetching();\n  return dispatch => {\n    httpClient\n      .get(server.TRANSACTION_URL)\n      .then(result => {\n        dispatch(setStateTransactionToSuccess(result.data));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(setStateTransactionToFailed());\n      });\n  };\n};\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/layouts/Header\";\nimport Menu from \"./components/layouts/Menu\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport LoginPage from \"./components/pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/pages/RegisterPage/RegisterPage\";\nimport ShopPage from \"./components/pages/ShopPage/ShopPage\";\nimport StockPage from \"./components/pages/StockPage/StockPage\";\nimport StockCreatePage from \"./components/pages/StockCreatePage/StockCreatePage\";\nimport StockEditPage from \"./components/pages/StockEditPage/StockEditPage\";\nimport ReportPage from \"./components/pages/ReportPage/ReportPage\";\nimport TransactionPage from \"./components/pages/TransactionPage/TransactionPage\";\nimport * as loginActions from \"./actions/login.action\";\nimport { server } from \"./constants\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(3)\n  }\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { 500: \"#1E88E5\" }\n  },\n  status: {\n    danger: \"orange\"\n  }\n});\n\nexport default function App(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  useSelector(({ loginReducer }) => loginReducer); // just mention in order to force refresh when login/logout\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // Protected Route\n  const SecuredRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  const LoginRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Redirect to=\"/stock\" />\n        ) : (\n          <LoginPage {...props} />\n        )\n      }\n    />\n  );\n\n  useEffect(() => {\n    loginActions.isLoggedIn();\n    // restore login state\n    if (localStorage.getItem(server.TOKEN_KEY)) {\n      dispatch(loginActions.reLogin(props.history));\n    }\n  }, []);\n\n  return (\n    <Router basename={process.env.REACT_APP_IS_PRODUCTION === '1' ? \"\" : \"\"}>\n      <Switch>\n        <ThemeProvider theme={theme}>\n          <div className={classes.root}>\n            <CssBaseline />\n            {/* Header */}\n            {loginActions.isLoggedIn() && (\n              <Header handleDrawerOpen={handleDrawerOpen} open={open} />\n            )}\n            {/* Menu */}\n            {loginActions.isLoggedIn() && (\n              <Menu handleDrawerClose={handleDrawerClose} open={open} />\n            )}\n            {/* Content */}\n            <Container className={classes.content} maxWidth={false}>\n              <LoginRoute path=\"/login\" component={LoginPage} />\n              <Route path=\"/register\" component={RegisterPage} />\n              <SecuredRoute path=\"/shop\" component={ShopPage} />\n              <SecuredRoute exact={true} path=\"/stock\" component={StockPage} />\n              <SecuredRoute path=\"/stock/create\" component={StockCreatePage} />\n              <SecuredRoute path=\"/stock/edit/:id\" component={StockEditPage} />\n              <SecuredRoute path=\"/report\" component={ReportPage} />\n              <SecuredRoute path=\"/transaction\" component={TransactionPage} />\n              <Route\n                exact={true}\n                path=\"/\"\n                component={() => <Redirect to=\"/login\" />}\n              />\n              {/* The Default not found component */}\n              {/* <Route render={props => <Redirect to=\"/login\" />} /> */}\n            </Container>\n          </div>\n        </ThemeProvider>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LOGIN_FETCHING,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  // Check if logged-in\n  switch (type) {\n    case LOGIN_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case LOGIN_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case LOGIN_FAILED:\n      return { ...state, result: payload, isFetching: false, isError: true };\n    case LOGOUT:\n      return { ...state, result: \"\", isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  REGISTER_FETCHING,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REGISTER_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case REGISTER_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case REGISTER_FAILED:\n      return { ...state, result: payload, isFetching: false, isError: true };\n\n    default:\n      return state;\n  }\n};\n","import {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  STOCK_CLEAR\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case STOCK_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case STOCK_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case STOCK_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case STOCK_CLEAR:\n      return { ...state, result: null, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT } from \"../constants\";\n\nconst initialState = {\n  mOrderLines: [],\n  mTotalPrice: 0,\n  mTaxAmt: 0,\n  mIsPaymentMade: false,\n  mGiven: 0\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SHOP_UPDATE_ORDER:\n      return {\n        ...state,\n        mOrderLines: payload.orderLines,\n        mTotalPrice: payload.totalPrice,\n        mTaxAmt: payload.taxAmt\n      };\n    case SHOP_UPDATE_PAYMENT:\n      return {\n        ...state,\n        mIsPaymentMade: payload.isPaymentMade,\n        mGiven: payload.given\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  TRANSACTION_SUCCESS,\n  TRANSACTION_FETCHING,\n  TRANSACTION_FAILED\n} from \"./../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TRANSACTION_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case TRANSACTION_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case TRANSACTION_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport loginReducer from './login.reducer';\nimport registerReducer from './register.reducer';\nimport stockReducer from './stock.reducer';\nimport shopReducer from './shop.reducer';\nimport transactionReducer from './transaction.reducer';\nexport default combineReducers({\n    loginReducer,\n    registerReducer,\n    stockReducer,\n    shopReducer,\n    transactionReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = null;\n\nif (process.env.REACT_APP_IS_PRODUCTION === 1) {\n  middlewares = applyMiddleware(thunk);\n} else {\n  middlewares = applyMiddleware(thunk, logger);\n}\n\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}